{"_env":"NODEJS","_serializationMethod":"normal","_autosave":false,"_autosaveInterval":5000,"_collections":[{"name":"items","unindexedSortComparator":"js","defaultLokiOperatorPackage":"js","_dynamicViews":[],"uniqueNames":[],"transforms":{},"rangedIndexes":{},"_data":[{"slug":"hello","description":"Empower your NuxtJS application with @nuxt/content module: write in a content/ directory and fetch your Markdown, JSON, YAML and CSV files through a MongoDB like API, acting as a Git-based Headless CMS.","title":"Getting started","toc":[{"id":"writing-content","depth":2,"text":"Writing content"},{"id":"fetching-content","depth":2,"text":"Fetching content"},{"id":"displaying-content","depth":2,"text":"Displaying content"}],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Empower your NuxtJS application with "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"@nuxtjs/content"}]},{"type":"text","value":" module: write in a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"content/"}]},{"type":"text","value":" directory and fetch your Markdown, JSON, YAML and CSV files through a MongoDB like API, acting as a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Git-based Headless CMS"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"h2","props":{"id":"writing-content"},"children":[{"type":"element","tag":"a","props":{"href":"#writing-content","ariaHidden":"true","tabIndex":-1},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Writing content"}]},{"type":"text","value":"\n"},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Learn how to write your "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"content/"}]},{"type":"text","value":", supporting Markdown, YAML, CSV and JSON: "},{"type":"element","tag":"a","props":{"href":"https://content.nuxtjs.org/writing","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"https://content.nuxtjs.org/writing"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"h2","props":{"id":"fetching-content"},"children":[{"type":"element","tag":"a","props":{"href":"#fetching-content","ariaHidden":"true","tabIndex":-1},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Fetching content"}]},{"type":"text","value":"\n"},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Learn how to fetch your content with "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"$content"}]},{"type":"text","value":": "},{"type":"element","tag":"a","props":{"href":"https://content.nuxtjs.org/fetching","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"https://content.nuxtjs.org/fetching"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tag":"h2","props":{"id":"displaying-content"},"children":[{"type":"element","tag":"a","props":{"href":"#displaying-content","ariaHidden":"true","tabIndex":-1},"children":[{"type":"element","tag":"span","props":{"className":["icon","icon-link"]},"children":[]}]},{"type":"text","value":"Displaying content"}]},{"type":"text","value":"\n"},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Learn how to display your Markdown content with the "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"<nuxt-content>"}]},{"type":"text","value":" component directly in your template: "},{"type":"element","tag":"a","props":{"href":"https://content.nuxtjs.org/displaying","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"https://content.nuxtjs.org/displaying"}]},{"type":"text","value":"."}]}]},"text":"\nEmpower your NuxtJS application with `@nuxtjs/content` module: write in a `content/` directory and fetch your Markdown, JSON, YAML and CSV files through a MongoDB like API, acting as a **Git-based Headless CMS**.\n\n## Writing content\n\nLearn how to write your `content/`, supporting Markdown, YAML, CSV and JSON: https://content.nuxtjs.org/writing.\n\n## Fetching content\n\nLearn how to fetch your content with `$content`: https://content.nuxtjs.org/fetching.\n\n## Displaying content\n\nLearn how to display your Markdown content with the `<nuxt-content>` component directly in your template: https://content.nuxtjs.org/displaying.","dir":"/","path":"/hello","extension":".md","createdAt":"2021-07-18T10:51:06.290Z","updatedAt":"2021-07-18T10:51:06.290Z","meta":{"version":0,"revision":0,"created":1643520387621},"$loki":1},{"slug":"session","body":[{"id":"a241676c-8a1d-45f9-8d88-c61ba4ec5fe3","title":"Venue open / 開場","room":"#pyconjp","day":"10/15","start_time":"12:30","no":"","elevator_pitch":"","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"","track":"","lang_of_talk":"","lang_of_slide":"","description":"","duration_min":"30","slide_url":"","recording_url":"","name":"","profile":""},{"id":"290206","title":"Opening (Day 1)","room":"#pyconjp","day":"10/15","start_time":"13:00","no":"1","elevator_pitch":"Language of Talk: Both (Japanese $ English)","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"","lang_of_slide":"English only","description":"スポンサーのPR動画放映も含みます / Including sponsor's PR video","duration_min":"30","slide_url":"","recording_url":"","name":"PyCon JP 2021 Staff","profile":""},{"id":"290208","title":"基調講演: 谷合 廣紀氏","room":"#pyconjp","day":"10/15","start_time":"13:30","no":"2","elevator_pitch":"Day1 Keynote by Mr. HIROKI TANIAI (Simultaneously translated into English)","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"","duration_min":"60","slide_url":"https://www.dropbox.com/s/cbk11tpfylx739f/taniai_PyConJP2021_v2_share.pptx?dl=0","recording_url":"https://youtu.be/8bwSCG2ivjY","name":"廣紀 谷合","profile":"https://pyconjp.blogspot.com/2021/08/pycon-jp-2021-1-announcement-of-keynote.html"},{"id":"290215","title":"スペシャルブース紹介","room":"#pyconjp","day":"10/15","start_time":"14:30","no":"3","elevator_pitch":"スペシャルブースを紹介する10分のコーナーです。各社30秒×13ブースです！","prerequisite_knowledge":"特になし。スペシャルブースはどなたでも回れます","audience_takeaway":"興味を持ったスペシャルブースを休憩時間にぜひ訪れてみてください。あいことばを集めるスタンプラリーもあります！","audience_python_level":"All","track":"","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"","duration_min":"10","slide_url":"","recording_url":"","name":"PyCon JP 2021 Platinum & Gold sponsors","profile":"https://2021.pycon.jp/sponsors"},{"id":"273758","title":"実践！Django + GraphQL実装 〜素敵なGraphQL Tipsを添えて〜","room":"#pyconjp_1 (15th: onsite)","day":"10/15","start_time":"15:00","no":"4","elevator_pitch":"「GraphQLに少し興味がある」「業務で実際に使う前に気をつける点や実装の詳細を把握したい」という方を対象としています。主にGraphQLそのものや、実践的なGraphene-Django(Graphene-Python)の話になりますが、フロントサイドとの連携や型データの活用方法など効率・品質を上げるためのTipsもいくつか盛り込んだトークになります。","prerequisite_knowledge":"* MUST\r\n  * Django, Django Formの基礎知識。\r\n* NICE TO HAVE\r\n  * REST, WebSocket, ASGIを少し知っている\r\n  * ウェブアプリケーションを何かしら作った事がある","audience_takeaway":"* RESTとGraphQLを比較検討して、技術選定ができるようになる\r\n* Graphene-Python, Graphene-Djangoを使ったGraphQL Query, Mutation, Subscriptionの実践的な実装方法\r\n* 副次的にクライアントサイドに関してTypescriptでのGraphQL型の再利用方法・GraphQLモックサーバの用意方法・Apollo Clientの大まかな利用用途を理解する\r\n* 業務で失敗した点から学ぶGraphQL APIを実装する上での注意点","audience_python_level":"Intermediate","track":"Web programming","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"話す内容の大まかな流れは以下になります。\r\n\r\n* GraphQLとは何か\r\n  * GraphQLの特徴\r\n  * RESTと比較しつつ、GraphQLを利用する価値があるケース\r\n* GraphQLの型を学ぶ\r\n  * GraphQLの型の書き方\r\n  * Graphene-DjagnoでDjangoのモデルを使った型の実装方法\r\n* Graphene-Django(Graphene-Python)の実装例\r\n  * Queryの実装を通じて、入出力の定義、リゾルバーの実装を知る\r\n  * Mutationの実装をDjango Formを利用して行う\r\n  * 独自の型を用意してGraphQL APIでのエラー処理を行う\r\n  * 動作確認方法やPytestでのテストの書き方\r\n* Graphene-Subscriptionsを使ったSubscription実装例\r\n  * 前提知識としてWebSocket, RxPy, ASGIについて少し説明\r\n  * Subscriptionの実装例\r\n  * 動作確認方法やPytestでのテストの書き方\r\n* GraphQLを使って業務を行う時の注意点\r\n  * N+1問題の予防\r\n  * DeprecatedとなったAPIの扱い\r\n  * モデル実装時の外部キーの設定\r\n  * 返却したくないカラムの扱い\r\n* 周辺知識の共有\r\n  * (副次的な部分にはなりますが、クライアントサイドも語らないと勿体ないので少し時間を使ってこの章の話をします)\r\n  * 5minでクライアント用のモックサーバを用意する\r\n  * GraphQLの型をTypeScriptで利用して実装の安定性を高める\r\n  * Apollo Clientの利用例\r\n    * クエリ・ミューテーションの書き方\r\n    * クエリの設定例","duration_min":"30","slide_url":"https://www.slideshare.net/ssuseraf19bf/django-graphql/ssuseraf19bf/django-graphql","recording_url":"https://youtu.be/0eYZq95JiMk","name":"Mitsuhiko Kai","profile":"株式会社ビープラウドでWeb Developerをしています。猫と犬が好きです。"},{"id":"271963","title":"scikit-learnの新機能を紹介します","room":"#pyconjp_2","day":"10/15","start_time":"15:00","no":"4","elevator_pitch":"このトークでは、誰もが使ったことのあるscikit-learnに再入門し、近年追加された新機能を紹介します。\r\n前処理では、DataFrameを一発で特徴量変換できるColumnTransformerを紹介します。学習では、カテゴリ値を扱えるHistGradientBoostingClassifierと、グリッドサーチよりも高速なHalvingGridSearchCV、最後にPipelineとその可視化方法を解説します。\r\nトークを聞けば、scikit-learnをより便利・快適に使えるようになります。","prerequisite_knowledge":"必須とする前提知識はありません。\r\nscikit-learn、pandas、numpyのパッケージを使って機械学習を実装した経験があると、トークをより理解しやすいです。\r\n","audience_takeaway":"・scikit-learnの基礎知識\r\n・DataFrameのまま、各列を並列で前処理する方法\r\n・LightGBMのようにカテゴリ値を使用したクラス分類や回帰モデルの構築手法\r\n・処理全体をパイプラインで一元管理し、処理フローを可視化する方法","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"Pythonで機械学習を実装したことがある人のほとんどは、scikit-learnを使ったことがあるでしょう。TensorFlowやPyTorchによるディープラーニングが盛んな近年においても、scikit-learnは特徴量変換（各種Transfer）、データ分割（train_test_split）、処理フローの統合（Pipeline）、性能評価（metrics）など様々な場面で活用されており、今でもアップデートが盛んなパッケージの一つです。\r\n\r\nしかし、「近年にscikit-learnで実装された新機能」に詳しい方は、そう多くはないのではないでしょうか？例えば、最新バージョン（0.24）ではHalvingGridSearchCVという新しいパラメータサーチが公開されましたが、現時点で日本語の解説記事は無いようです。古参のパッケージであるが故に、書籍やサイトで紹介されている記事の中には古い情報も数多くあります。特に機械学習の入門者はscikit-learnを最初に学ぶことが多いからこそ、新しい機能を優先的に学ぶ必要があると感じています。\r\n\r\nこのトークでは、近年に公開されたscikit-learnの新機能からいくつかを厳選し、従来手法との違いや利点について解説します。すでにscikit-learnを知っている人もそうでない人も、新たな発見に出会えるでしょう。\r\n\r\n構成とタイムラインは以下の通りです。\r\n- 導入（5min）\r\n　- 自己紹介\r\n　- scikit-learnの概要と基本コンセプト\r\n　- scikit-learnの歴史\r\n- DataFrameの前処理（ColumnTransformer）（5min）\r\n　- 従来はカラム単位にTransferを実装していた\r\n　- ColumnTransformerはDataFrameの各列を特徴量に直接変換できる\r\n　- 従来手法と比べ、並列化や保守性に優れている\r\n　- 実装事例の紹介\r\n- カテゴリ値の学習（HistGradientBoosting ）（5min）\r\n　- これまで、scikit-learnではカテゴリ値をそのまま扱える予測器は無かった\r\n　- HistGradientBoostingを使うことで、カテゴリ値を用いた分類や予測が可能\r\n　- 従来のワンホットエンコードと比べ、メモリ効率や学習速度が向上\r\n　- 実装事例の紹介\r\n- 効果的なパラメータ探索（HalvingGridSearchCV）（5min）\r\n　- 従来までのGridSearchやRandomSearchは計算コストが高かった\r\n　- HalvingGridSearchCVは、最新のSuccessiveHalving手法を使用したサーチ手法\r\n　- 従来手法と比べ、パラメータ探索を大幅に高速化\r\n　- 実装事例の紹介\r\n- パイプラインの可視化（Pipeline）（4miin）\r\n　- パイプラインによる処理フローの統合\r\n　- パイプラインがグラフ構造で可視化できるようになった\r\n　- 実装事例の紹介\r\n- まとめ（1min）","duration_min":"30","slide_url":"","recording_url":"","name":"Shigenobu Fujine","profile":"2012年　旧みずほ情報総研株式会社（2021/4/1よりみずほリサーチ＆テクノロジーズ株式会社に統合）に入社。勘定系システム開発に従事。\r\n2018年　同社の先端研究部門に異動。AIやクラウドを活用したシステム開発や技術研究を担当。"},{"id":"273766","title":"ASGIアプリケーション入門 - こわくないasyncio基礎と非同期IO - FastAPIを例に","room":"#pyconjp_3","day":"10/15","start_time":"15:00","no":"4","elevator_pitch":"PythonでWebアプリケーションを作る際にWSGI FWではなくASGI FWで、と検討されている方も多いのではないでしょうか。\r\nASGIとはUvicornなどのWebサーバーとFastAPIなどのWebフレームワークを繋ぐ、asyncio対応です。\r\nそう、asyncio。\r\nPythonを使っていてasyncioを怖いと思う方ももしかしたらいらっしゃるかもしれません。（私もそうです）\r\n\r\n本トークでは、「今までasyncioってよくわからなかったけど、基礎はわかったかも。」「Python Webで非同期IOってこう役に立つんだ」そして「asyncio対応のモジュールでPython Webを構築したいな」と思ってもらえるような内容をFastAPIとAsyncpgでの具体例とともにお届けしたいと思っています。","prerequisite_knowledge":"Pythonを使ってWebアプリケーションを実装し、環境を構築したことがある経験。","audience_takeaway":"・アプリケーションエンジニアとして必要なasyncioの基礎\r\n・Python Webでasyncioを利用する利点\r\n・FastAPIとAsyncpgを組み合わせた場合の使い方","audience_python_level":"Intermediate","track":"Web programming","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"近年、FastAPIの盛り上がりにより利用されている方も多いのではないでしょうか。ですが、asyncio Webの利点を理解して使われている方は少ないように感じています。\r\n\r\nアプリケーションエンジニアに必要なasyncioの使い方・考え方の基礎から、実際のASGI Webアプリケーションを例にDBアクセスまでasyncioの強みを生かした非同期IOによる。FastAPIとAsyncpgを利用したアプリケーションで解説します。\r\n\r\n- 導入\r\n    - 自己紹介\r\n\r\n- asyncioの基礎について (15min)\r\n  - 逐次処理・並行処理・並列処理の違い\r\n  - コルーチン・タスク・イベントループの概要\r\n  - asyncioの書き方、使うべき・覚える必要のある機能の解説\r\n\r\n- ASGIアプリケーション解説(15min)\r\n  - FastAPI と Asyncpg によるアプリケーション解説\r\n  - asyncio Web による利点\r\n  - WSGIアプリケーションとの速度比較\r\n","duration_min":"30","slide_url":"https://speakerdeck.com/jrfk/asgiapurikesiyonru-men-kowakunaiasyncioji-chu-tofei-tong-qi-io","recording_url":"","name":"Junya Fukuda","profile":"Pythonエンジニア"},{"id":"272565","title":"Python 3.9からの新定番zoneinfoを使いこなそう","room":"#pyconjp_4","day":"10/15","start_time":"15:00","no":"4","elevator_pitch":"Python 3.9から追加されたタイムゾーンを扱うzoneinfoモジュールが追加されました。\r\n本セッションでは、「なぜzoneinfoが登場したのか」を解説し、すぐ実践できる使い方についてお伝えします。\r\nまた、zoneinfoを使う上でのちょっとした嵌りポイントとその回避方法についてもお伝えします。","prerequisite_knowledge":"Pythonチュートリアル（https://docs.python.org/ja/3/tutorial/）またはそれに準ずる入門書を読んで自分でPythonコードを書いたことがある。","audience_takeaway":"- zoneinfoの基本的な使い方\r\n- zoneinfoを使う上で注意すべきエラーとその回避方法","audience_python_level":"Beginner","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"【zoneinfo誕生の経緯と基本的な使い方】\r\nzoneinfoはPython 3.9から登場しましたが、元々Pythonでタイムゾーンを扱う際はpytzを使うのが定番でした。\r\nなぜ、pytzではなくzoneinfoが必要になったのでしょうか？\r\nzoneinfoは、Python 3.6でdatetimeモジュールに加わったfoldという属性と関連があります。ここではfold属性の役割と、zoneinfoがそれとどう関わってくるのかについてお話します。\r\nまた、zoneinfoの使い方についても要点を押さえてお伝えします。\r\n\r\n【zoneinfoのよくあるエラー】\r\nzoneinfoは内部にタイムゾーンデータベースを持っていません。OSに標準搭載されているタイムゾーンデータベースを参照するようになっています。\r\nところが、WIndowsではある理由でOSのタイムゾーンデータベースを参照することができません。\r\nここでは、その理由と対応方法についてお話します。\r\n\r\n【zoneinfoの周辺知識】\r\n以下についてお伝えします。\r\n- Djangoでのzoneinfo対応状況\r\n- zoneinfo以外でfold属性に対応しているサードパーティモジュールの紹介","duration_min":"30","slide_url":"https://www.slideshare.net/ryu22e/python-39zoneinfo","recording_url":"https://youtu.be/aGMEd7peQiA","name":"Ryuji Tsutsui","profile":"普段はフィンテック系企業でDjangoを使ってウェブサービスを作っています。\r\nPython Boot Campコアスタッフ、Shonan.pyスタッフなど、Pythonコミュニティにも携わっています。\r\nTwitter: @ryu22e\r\nBlog: https://ryu22e.org/"},{"id":"268400","title":"Multilingual Natural Language Processing using Python","room":"#pyconjp_5","day":"10/15","start_time":"15:00","no":"4","elevator_pitch":"Natural Language Processing(NLP) is an interesting and challenging field. It becomes even more interesting and challenging when we take into consideration more than one human language. In this talk, we will discuss the techniques for processing information in more than one human language.","prerequisite_knowledge":"Basic understanding of Python and Natural Language Processing","audience_takeaway":"The Attendees will learn strategies to perform natural language processing on a text written in two or more human languages","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"English","lang_of_slide":"English only","description":"Natural Language Processing(NLP) is an interesting and challenging field. It becomes even more interesting and challenging when we take into consideration more than one human language. when we perform an NLP on a single language there is a possibility that the interesting insights from another human language might be missed out. The interesting and valuable information may be available in other human languages such as Spanish, Chinese, French, Hindi, and other major languages of the world. Also, the information may be available in various formats such as text, images, audio, and video.\r\n\r\nIn this talk, I will discuss techniques and methods that will help perform NLP tasks on multi-source and multilingual information. The talk begins with an introduction to natural language processing and its concepts. Then it addresses the challenges with respect to multilingual and multi-source NLP. Next, I will discuss various techniques and tools to extract information from audio, video, images, and other types of files using PyScreenshot, SpeechRecognition, Beautiful Soup, and PIL packages. Also, extracting the information from web pages and source code using pytessaract. Next, I will discuss concepts such as translation and transliteration that help to bring the information into a common language format. Once the language is in a common language format it becomes easy to perform NLP tasks. Next, I will explain with the help of a code walkthrough generating a summary from multi-source and multi-lingual information into a specific language using spacy and stanza packages.\r\n\r\nOutline\r\n1. Introduction to NLP and concepts (05 Minutes)\r\n2. Challenges in Multi source multilingual NLP (02 Minutes)\r\n3. Tools for extracting information from various file formats (04 Minutes)\r\n4. Extract information from web pages and source code (04 Minutes) \r\n5. Methods to convert information into common language format (05 Minutes)\r\n6. code walkthrough for multi-source and multilingual summary generation (10 Minutes)","duration_min":"30","slide_url":"","recording_url":"","name":"gcdeshpande","profile":"Mr. Gajendra Deshpande holds a masters degree in Computer Science and Engineering and working as Assistant Professor at the Department of Computer Science and Engineering, KLS Gogte Institute of Technology, Belagavi, Karnataka, India.Under his mentor-ship teams have won Smart India Hackathon 2018 and Smart India Hackathon 2019 . He is Technical Director for Sestoauto Networks Pvt. Ltd. and Founder of Thingsvalley. His areas of Interest include Programming, Web Designing, Cyber Security, Artificial Intelligence, Machine Learning, Brain Computer Interface, Internet of Things and Virtual Reality. He has presented papers at NIT Goa, Scipy India 2017 IIT Bombay, JuliaCon 2018 London, Scipy India 2018 IIT Bombay, Scipy 2019 USA and PyCon FR 2019, Bordeaux, France."},{"id":"273820","title":"PyPIデビュー手前の人のための地下活動手法 - pypicloudを使ったプライベートレジストリの構築","room":"#pyconjp_1 (15th: onsite)","day":"10/15","start_time":"16:00","no":"5","elevator_pitch":"Pythonでライブラリを作ったら、PyPIに登録したくなりますよね？でもちょっと怖かったりしますよね？\r\n\r\nというわけで、Pythonのライブラリを「PyPIに公開」でもなく「GitHub上でそのまま公開」でもない中庸の道として、自分用のパッケージレジストリを運用してみませんか？","prerequisite_knowledge":"- Pythonで自作モジュールを作れる程度の基礎知識\r\n- (あれば)GCP/AWSの基礎知識\r\n","audience_takeaway":"- pypicloudの構築方法・利用方法\r\n- それに付随するインフラ層の概論\r\n- 個人or組織内におけるプライベートレジストリの運用例","audience_python_level":"Intermediate","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"Pythonのライブラリを開発した際に、広く一般利用を求めたい場合はPyPIに公開することがほとんどです。\r\nしかし、そうではないパッケージも存在します。\r\n\r\n- 社内のために開発しており、公開自体が基本的に望ましくないライブラリ\r\n- 実際に作ってはみたが、PyPIに掲載していいかの自信が持てない\r\n\r\nこういった理由でPyPIに公開が難しいときに、どうすればいいでしょうか。\r\n\r\n非公開だったらパッケージのアーカイブなどを直接配布するようなアプローチも取れます。\r\nただただPyPIへの公開をためらってるだけなら、GitHubなどに晒すということもできます。\r\n\r\nこのセッションでは、もうちょっと突っ込んだアプローチとして、\r\n「自分のパッケージ専用でアップロード・公開ができる環境」を用意する手法を紹介します。\r\n\r\n- 自己紹介\r\n- 今回の主題\r\n  - プライベートなパッケージの共有方法\r\n  - パッケージレジストリサーバーの紹介\r\n- pypicloudその0\r\n  - どんなものか\r\n  - どんな使い方ができるのか(1) LAN内キャッシュ編\r\n- pypicloudその1\r\n  - pypicloudのオプションを読み解いていく\r\n  - どんな使い方ができるのか(2) 個人用PyPI編\r\n- pypicloudその2\r\n  - pypicloudのオプションを読み解いていく(2)\r\n  - どんな使い方ができるのか(3) 組織用プライベートレジストリ編\r\n- Extra-1: インフラコストの話\r\n- Extra-2: GCPではなくAWSがいい人向けの話\r\n- まとめ","duration_min":"30","slide_url":"https://attakei.net/slides/pyconjp-2021/","recording_url":"https://youtu.be/8KlZiTa8rtU","name":"Kazuya Takei","profile":"ニジボックス所属のインフラ寄りバックエンド系スタックフルエンジニア。 興味にリソースを振りがちで、最近はSphinxとFastAPI系と戯れてる機会が多め"},{"id":"271930","title":"位置データもPythonで！！！","room":"#pyconjp_2","day":"10/15","start_time":"16:00","no":"5","elevator_pitch":"デジタルデバイスが広く行き渡り、デバイスからは多くのデータが取得できます。コロナ禍の今、モバイルの位置データを活用してニュースでは人流を報じています。位置データは身近となる一方、生データが公開されていないため、その扱い方が語られることが少なく感じられます。本トークでは、位置データもPythonを使うと簡単に扱えることを示したあと、実際の人の動きのデータや気象データを扱う事例を取り上げます。","prerequisite_knowledge":"何もなくても楽しめます","audience_takeaway":"pythonで位置データを扱う際のエコシステム（位置データを扱うためのパッケージ: shapely/ geopandas 、位置データ可視方のためのパッケージ: folium / pydeck / plotly、気象データを扱うためのパッケージ xarray）\r\n位置データを扱う面白さ\r\n","audience_python_level":"Beginner","track":"Approaching to social problem","lang_of_talk":"Japanese","lang_of_slide":"Both","description":"コロナ禍の今、モバイルからの位置データの集計結果がニュースで毎日のように取り上げられるなど、位置データは身近なものとなりました。しかし、位置データ自体のプログラミングにおける取り扱いに関してはあまり語られることはありません。本トークではPythonを用いて容易に位置データを扱えることを示します。\r\n\r\nまずは、コンピュータで位置データを扱うには、住所を直接渡しても使えないことを示します。住所は経度緯度などの数値データに変換して扱います。オープンデータなどでも住所のみ記されているのをみると、位置データは数値で必要なことは、案外共有されていない事実かも知れません。\r\n\r\nPythonでは位置データはshapelyを用いて扱います。そのさまざまなクラスや属性に関しても触れ、位置データの扱い方を解説します。\r\n\r\n次に、geopandasを用いてまとまった位置データの扱い方をとりあげます。geopandasを使ってできることに加え、位置データを扱う代表的なファイル形式（shp形式、geojson形式）もとりあげます。\r\n\r\n最後に、実際のデータを用いた事例を示します。1つは過去のリアルタイムな複数人の位置データを扱います。もう一つは、位置データと気象データを用いて、どのように情報が扱えるかを示します。\r\n\r\nタイムテーブル\r\n自己紹介(1min)\r\nトーク概要（1min）\r\nPCにとって住所は位置データではない（8分）\r\nコンピュータに「住所」を「位置データ」として渡してはいけない\r\n住所を経度緯度に変換して渡す\r\n経度緯度も色々ある\r\nPythonでは位置データをshapelyを使って扱う\r\nまとまった位置データを扱う（8分）\r\nPythonではgeopandasを使ってまとまった位置データを操作する\r\npandasと違うところ\r\n位置データを扱うファイル形式\r\nPythonにおける位置データの可視化ツール（geopandas, folium, pydeck, plotly）\r\n実際の活用方法（5分）\r\n複数人の行動の可視化事例（ヒートマップ、リアルタイムに動かす）\r\n気象データと位置データを組み合わせた事例（位置データと気象データをxrrayとplotlyを使って可視化する）\r\nまとめ(1分)","duration_min":"30","slide_url":"https://github.com/mazarimono/pyconjp2021","recording_url":"https://youtu.be/GOVzBmcPRxE","name":"Hideyuki Ogawa","profile":"合同会社長目Founder/CEO。はんなりPythonオーガナイザ。京都在住。\r\n金融データの分析をするために、アラフォーでプログラミングをはじめ、現在ではお仕事としている。現在は社会問題、環境問題の解決に興味を持ち、その解決に役立てそうなお仕事を探している。\r\n証券アナリスト資格保有。"},{"id":"273795","title":"Pythonで始めるドキュメント・インテリジェンス入門","room":"#pyconjp_3","day":"10/15","start_time":"16:00","no":"5","elevator_pitch":"ビジネス文書をデータ化し構造や内容を理解するアプリケーションはドキュメント・インテリジェンスと呼ばれ、画像処理や自然言語処理といった複数の要素技術を組み合わせて開発する必要があります。何が必要でどう実現すれば良いのかといった第一歩を、Pythonでの具体的な構築事例とともに紹介します。","prerequisite_knowledge":"- 基礎的なPythonの知識\r\n- 画像処理や自然言語処理についての深い知識は求めません","audience_takeaway":"- ドキュメント・インテリジェンスの概要\r\n- アプリケーションを構築する上で必要とされる技術と、それを実現する上での具体的なPythonのパッケージとの対応関係の理解\r\n- 参加者自身の課題に適用するときに必要となる基礎知識、難易度を判断するための具体事例","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"近年の機械学習技術の飛躍的発展により、計算機が画像や文書をより深いレベルで解析できるようになりました。これにより可能となったのが「ドキュメント・インテリジェンス」で、近年では機械学習の研究対象としても企業における実応用としても盛り上がりを見せている分野です。\r\n\r\nドキュメント・インテリジェンスとは、人間が記述したビジネス文書を機械的に解析する技術の総称です。契約書や発注書、領収書、事業レポートなどのビジネスで利用される書類は、テーブル構造や箇条書きといった人間が読みやすくするための工夫が凝らされ、言葉のみならず図表や記号を活用した多様なフォーマットで記述されます。書類という空間上で自由に表現される文字情報は、ただ画像から文字起こしをするだけでは意味がなく、散らばった文字を有機的につなぎ合わせて言葉を構成し、レイアウトや配置から対応関係を汲み取り、そして解釈する必要があります。このためには画像処理や自然言語処理といった機械学習技術を組み合わせ、一つのアプリケーションして構築することで実現します。\r\n\r\nドキュメント・インテリジェンスのアプリケーションを作る上では、Pythonがもっとも適したプログラミング言語と言えるでしょう。機械学習の文脈で広く用いられるPythonですが、それ以外にも画像処理や文字列処理、ウェブアプリケーション上でのインタラクティブな可視化など、Pythonで利用できる豊富なパッケージにより開発を強力にサポートすることができます。\r\n\r\nそこで本発表では、ドキュメント・インテリジェンスの分野を俯瞰しつつ、どのドメイン領域においても共通して必要となる画像処理や自然言語処理の技術を対象に、Pythonで実現するための方法をご紹介します。\r\n\r\n- 導入（2 min）\r\n\t- 自己紹介\r\n- ドキュメント・インテリジェンスとは（10 min）\r\n\t- ビジネス文書の性質\r\n\t- ドキュメント・インテリジェンスの具体事例\r\n\t- 現時点で何ができて何ができないか、人間の認知能力との比較\r\n\t- アプリケーションを構成する各要素技術の紹介\r\n- Pythonを使った構築事例の紹介 (15 min)\r\n\t- 物理的な紙からの画像への変換\r\n\t- 画像の読み込みとOCRによる文字起こし\r\n\t- テーブルやレイアウト判定、項目の対応関係推定\r\n\t- 文書からの情報抽出\r\n\t- 開発をサポートするインタラクティブなウェブアプリケーションの構築\r\n- まとめ (3 min)\r\n\t- ドキュメント・インテリジェンスの今後の展望","duration_min":"30","slide_url":"https://speakerdeck.com/yag_ays/introduction-to-document-intelligence-with-python","recording_url":"https://youtu.be/yUhS29vQblo","name":"yag_ays","profile":"2020年7月よりUbie株式会社 機械学習エンジニア。医療ドメインの自然言語処理を中心に、機械学習エンジニアとしてプロダクト開発を行っている。趣味は愛犬のコーギーと遊ぶこと。\r\n\r\nhttps://yag.xyz/"},{"id":"273396","title":"Webアプリを並行開発する際のマイグレーション戦略","room":"#pyconjp_4","day":"10/15","start_time":"16:00","no":"5","elevator_pitch":"Webアプリの開発中に起こる、マイグレーションの競合を避けるにはどうすればよいでしょうか？複数のブランチで同じテーブルのカラムを追加して使いたい場合や、DBスキーマの変更が競合する場合は、ブランチのマージ時に競合してしまい、解決に苦労することがあります。このトークでは、実際の開発現場で発生したいくつかの事例を元に、トラブルを避けるためのブランチ運用とリリース戦略について紹介します。","prerequisite_knowledge":"データベースマイグレーション, デプロイ, ブランチマージ","audience_takeaway":"DBスキーマ変更を先行リリースし、マイグレーションの競合を避け、安全に並行開発を進める方法\r\n","audience_python_level":"Intermediate","track":"Web programming","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"Webアプリ開発とデータベースマイグレーションには密接な関係があり、Pythonでよく採用されるDjangoやSQLAlchemyには、DBのスキーマを変更するマイグレーション機能があります。一般的に、プログラムを実装するときはリポジトリでブランチを作りそれぞれのブランチで実装作業を進めます。Webアプリの開発でも同様ですが、各ブランチでDBスキーマを変更する場合には注意が必要です。例えば、複数のブランチで同じテーブルのカラムを追加して使いたい場合や、DBスキーマの変更が競合する場合は、ブランチのマージ時に競合してしまいます。多くの機能を並行開発したり、マージするまでの期間が長い場合には、このような競合が増えてしまいます。\r\n\r\nこのトークでは、Djangoを例に、データベースマイグレーションの仕組みから、実際の開発現場で発生したトラブルとその解決方法について紹介します。\r\n\r\nアジェンダ\r\n\r\n* データベースマイグレーション機能の紹介\r\n* DBスキーマ変更が競合するシンプルな例\r\n* 実際の開発現場で発生したトラブル事例\r\n* DBスキーマ変更の先行リリース\r\n* 新旧DBスキーマの並行運用\r\n","duration_min":"30","slide_url":"https://www.slideshare.net/shimizukawa/migration-strategies-for-parallel-development-of-web-applications","recording_url":"https://youtu.be/9b4F14EsTG0","name":"shimizukawa","profile":"株式会社ビープラウド所属。一般社団法人PyCon JP Association会計理事。2003年にZope2をきっかけにPythonを使い始め、その頃からオープンソース等のコミュニティー活動を始めた。Python mini Hack-a-thonやSphinx-users.jpなどPython関連イベント運営のかたわら、カンファレンスや書籍、OSS開発を通じてPython技術情報を発信している。\r\n\r\n著書／訳書：『エキスパートPythonプログラミング 改訂3版（2021 アスキードワンゴ刊）』『自走プログラマー（2020年 技術評論社刊）』『Pythonプロフェッショナルプログラミング第3版（2018 秀和システム刊）』『独学プログラマー（2018 日経BP社刊）』『Sphinxをはじめよう第2版（2017 オライリー・ジャパン刊）』"},{"id":"267640","title":"Visualize 3D scientific data in a Pythonic way like matplotlib","room":"#pyconjp_5","day":"10/15","start_time":"16:00","no":"5","elevator_pitch":"Do you want to visualize 3D scientific data in a Pythonic way like matplotlib?  If you want, this talk is for you.\r\nAs you know, matplotlib is a excellent library to plot 2D data in pythonic  but not for 3D scientific data. This is why PyVista is developed.\r\nIt is\r\n- \"VTK for humans\": a high-level API to the Visualization Toolkit (VTK)\r\n- 3D plotting made simple and built for large/complex data geometries\r\n- mesh data structures and filtering methods for spatial datasets\r\nYou will know the way of  visualize 3D scientific data in a Pythonic way like matplotlib.\r\nI will talk about\r\n- Hello World! of PyVista\r\n- Load and plot from a files\r\n- Extracting and Contourin\r\n- How to use camera object\r\n- Plot data over circular arc\r\nEnjoy pythonic plotting of 3D scientific data!","prerequisite_knowledge":"knowledges about matplotlib","audience_takeaway":"know-how of  visualize 3D scientific data in a Pythonic way like matplotlib.\r\n- Hello World! of PyVista\r\n- Load and plot from a files\r\n- Extracting and Contourin\r\n- How to use camera object\r\n- Plot data over circular arc","audience_python_level":"Intermediate","track":"Visual / Game / Music","lang_of_talk":"English","lang_of_slide":"English only","description":"Do you want to visualize 3D scientific data in a Pythonic way like matplotlib? If you want, this talk is for you.\r\nThis talk is the introduction of PyVista. It is\r\n- \"VTK for humans\": a high-level API to the Visualization Toolkit (VTK)\r\n- 3D plotting made simple and built for large/complex data geometries\r\n- mesh data structures and filtering methods for spatial datasets","duration_min":"30","slide_url":"https://drive.google.com/file/d/1ATsHw_1-2t7EzlMFeidAAdW-j7-FAnBk/view?usp=sharing","recording_url":"https://youtu.be/ru-nENLgleo","name":"Tetsuo Koyama","profile":"ARK Information Systems, INC. - Software Engineer (2012-)"},{"id":"289624","title":"PyCon JP Association公開mtg","room":"#pyconjp_1 (15th: onsite)","day":"10/15","start_time":"17:00","no":"6","elevator_pitch":"一般社団法人PyCon JP Association の公開運営会議を開催します。","prerequisite_knowledge":"特になし。どなたでも参加歓迎です","audience_takeaway":"","audience_python_level":"Beginner","track":"Anything else basically which doesn’t fall into the types of topics above","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"参考までに過去の例です：https://pyconjp.blogspot.com/2019/09/pyconjp-committee-meeting.html","duration_min":"60","slide_url":"https://pyconjp.blogspot.com/2021/10/pycon-jp-association-meeting-2021.html","recording_url":"","name":"一般社団法人PyCon JP Association 理事","profile":""},{"id":"273538","title":"コミュニティサービスにおけるレコメンデーションの変遷とAWS SageMakerを用いた機械学習パイプラインについて","room":"#pyconjp_2","day":"10/15","start_time":"17:00","no":"6","elevator_pitch":"私の所属するコネヒト株式会社が運営するQAサービス「ママリ」では月間投稿数が約130万件ほどありますが、そのほとんどがルールベースでユーザーに届けられていました.  \r\nそこで2020年後半から本格的にレコメンデーション機能の実装に取り組み始め、約半年間で様々なアップデートを行い実験してきました. \r\nこのトークでは、レコメンデーション機能を実装する際に得た知見や勘所を中心に、レコメンデーションアルゴリズムや機械学習基盤構築Tipsをご紹介します.  ","prerequisite_knowledge":"- pythonを用いたデータ分析経験\r\n- 機械学習ワークフローの基本的な流れ（実務経験はなくとも、知識があれば大丈夫です）\r\n- （ある良い※任意）レコメンデーションエンジンの開発経験\r\n- （ある良い※任意）AWS SageMaker/StepFunctionsを使ったことのある経験","audience_takeaway":"- Pythonを用いたレコメンデーションアルゴリズムの実装例\r\n- 実サービスへ機械学習を導入する際の勘所\r\n- AWS SageMakerとコンテナを用いたデータ分析（python）環境構築Tips\r\n- SageMakerとStepFunctionsを用いた機械学習パイプライン構築Tips","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"# 概要\r\n現代において我々が使用している様々なサービスは、パーソナライズやレコメンデーションといった機能が当たり前の時代になっています.  \r\nそれと同時に、良いレコメンデーションはサービスの競争力を高めるために非常に重要な役割を担っていると考えられます. \r\n私の所属するコネヒト株式会社が運営するQAサービス「ママリ」では、数年前のCM放映をきっかけにユーザー基盤が拡大し、ユーザーの多様性が高くなりました.  \r\nそれに伴い投稿される質問の数やその種類も増えた結果、ひとりひとりのユーザーが抱える悩みを解決できるようなQAを探すのが難しくなってきていました.このような課題感からレコメンデーション機能の導入に踏み切りました.  \r\nまたそれと同時に、日々蓄積される行動ログデータを用いて、安定かつ継続的にモデル学習（Continuous Training）を行う機械学習基盤も必要となってきました.  \r\n本トークでは、QAサービス「ママリ」において、Pythonを用いたレコメンデーション機能を導入した変遷やそのアルゴリズムをご紹介しつつ、サービス実装時のポイントや、AWSを用いた機械学習パイプラインの構築方法についてご紹介します.  \r\n\r\n# Outline\r\n- 導入（5min）    \r\n    - 自己紹介  \r\n    - 一般的なレコメンデーションの説明  \r\n- ママリにおけるレコメンデーションの変遷とそのアルゴリズム （10min）  \r\n    - TensorFlowを用いた行列分解によるレコメンデーション（2020.12〜）  \r\n    - トピックモデリングを活用したレコメンデーション（2021.03〜）  \r\n    - ニューラルネットワークを活用したレコメンデーション（2021.06〜）  \r\n- AWS SageMakerを用いた機械学習パイプラインの構築（10min）  \r\n    - SageMakerを使用する以前に感じていた課題感  \r\n    - SageMakerを活用するメリット・デメリット  \r\n    - StepFunctions×SageMakerを用いた機械学習パイプラインの構築方法  \r\n- まとめと今後の展望について（3min）  \r\n","duration_min":"30","slide_url":"https://speakerdeck.com/takapy/komiyuniteisabisuniokerurekomendesiyonfalsebian-qian-tomlpaipurainnituite","recording_url":"https://youtu.be/LIX-_gKM6_k","name":"takapy","profile":"コネヒト株式会社で機械学習エンジニアとして、機械学習基盤や機械学習モデル・APIの開発に従事。\r\n\r\n趣味でデータ分析コンペに出場したり、nlplotという自然言語可視化ライブラリの開発をしています。機械学習をプロダクトに導入し、どうビジネスインパクトを出すかに興味があります。"},{"id":"267483","title":"組み込み関数powの知られざる進化","room":"#pyconjp_3","day":"10/15","start_time":"17:00","no":"6","elevator_pitch":"組み込み関数powとは数の冪乗を返す関数です。Python 3.8でpow関数に新たな機能が追加され、整数mを法とする剰余類における逆元が計算できるようになりました。本発表では通常の整数における冪乗との違い、背後で使われているアルゴリズム、活用例について紹介します。","prerequisite_knowledge":"Pythonに関する予備知識は不要、組み込み関数powやべき乗(a **b）を知っていればOK。\r\n数学に関する知識は「冪乗」や「剰余（あまり）」の概念を知っていればOK。","audience_takeaway":"- powのような古くからある関数でもアップデートが行われるという知見\r\n- 何気なく使う関数の背後にあるアルゴリズム（今回は拡張Euclidの互除法）の理解\r\n- 数学的に興味深い問題（整数論）の紹介","audience_python_level":"Beginner","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"Pythonの組み込み関数powは遅くても[バージョン1.4](https://docs.python.org/release/1.4/lib/node26.html#SECTION00330000000000000000)から存在する関数で、数の冪乗を計算する関数です。\r\nPython 3.8でpow関数に新たなる機能が追加されました。\r\nそれは整数mを法とした剰余類（合同算術）における逆元計算です。\r\n本発表では計算の具体例や背後にある理論、アルゴリズムの紹介を行います。\r\n\r\n- 組み込み関数powについて\r\n    - 従来（3.7まで）の使い方\r\n        - pow(2, 3) 2の3乗\r\n        - pow(2, 100, 3)  2の100乗を3で割った余り\r\n- 3.8の新機能：剰余類における逆元\r\n    - pow(38, -1, 97) 38の97を法とした剰余類における逆元\r\n    - (23 * 38) % 97 = 1\r\n- 整数mを法とした剰余類とは\r\n- 拡張Euclidの互除法\r\n- 逆元が計算可能であるための必要十分条件\r\n- 計算の効率性\r\n- まとめ","duration_min":"30","slide_url":"https://github.com/HayaoSuzuki/pyconjp2021/blob/main/20211015slide.pdf","recording_url":"https://youtu.be/MjLGvB8DCEU","name":"Hayao Suzuki","profile":"電気通信大学大学院 情報理工学研究科 総合情報学専攻 博士前期課程修了、修士（工学）。\r\n"},{"id":"273842","title":"Bokeh & Dash Cytoscape 〜 Pythonによるインタラクティブなネットワーク可視化ライブラリの比較","room":"#pyconjp_4","day":"10/15","start_time":"17:00","no":"6","elevator_pitch":"SNSの友達関係や論文の引用関係など、世の中には何かと何かの「つながり」の構造がたくさん存在します。本発表では、このようなネットワーク構造のデータの可視化を行う上でのポイントと、Pythonでインタラクティブなネットワーク可視化が行えるライブラリとして、BokehおよびDash Cytoscapeの特徴を比較して紹介します。","prerequisite_knowledge":"- Pythonの基本文法を知っていること\r\n- pandas、Numpy、 Jupyter Notebookを触ったことがあること。または、どのようなことができるライブラリ・ツールか知っていること","audience_takeaway":"- ネットワーク構造のデータを可視化する上でのポイント\r\n- Pythonでインタラクティブなネットワーク可視化を行う上でのライブラリの選択肢\r\n- BokehおよびDash Cytoscapeの特徴と、両ライブラリの基本的な使い方","audience_python_level":"Beginner","track":"Visual / Game / Music","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"SNSの友達関係や論文の引用関係など、世の中には何かと何かの「つながり」の構造がたくさん存在します。このようなグラフ構造（ネットワーク構造）を可視化するライブラリやツールは各種ありますが、普段Python を使っている立場からすると、データ取得・前処理から可視化・公開まで、全ての工程をPythonで一気通貫できると嬉しいものです。\r\n\r\nPythonでグラフ構造のインタラクティブな可視化を実現する手段のひとつとして、これまでネットワーク解析のライブラリである「NetworkX」と可視化ライブラリ「Bokeh」を組み合わせる方法がありました。また、新たな選択肢として、複雑ネットワークのツールであるCytoscapeの機能がPythonで使える「Dash Cytoscape」が、2018年末にリリースされました。本発表では、グラフ構造のインタラクティブな可視化ツールの選定基準と、BokehおよびDash Cytoscapeの特徴の比較を紹介します。\r\n\r\n▼ 内容（以下は、現時点で予定しているアウトラインです）\r\n1. 導入 \r\n2. ネットワーク可視化とは\r\n3. ネットワーク可視化の基本\r\n    - ネットワーク構造\r\n    - スタイル\r\n    - ノードの位置\r\n4. Pythonによるネットワーク可視化の選択肢\r\n5. Bokeh\r\n6. Dash Cytoscape\r\n7. Bokeh & Dash Cytoscapeの特徴比較 概要\r\n8. Bokeh & Dash Cytosacpeの特徴比較 詳細\r\n    - ネットワーク構造\r\n    - スタイル\r\n    - ノードの位置\r\n    - その他\r\n9. まとめ","duration_min":"30","slide_url":"https://speakerdeck.com/komofr/pyconjp2021","recording_url":"https://youtu.be/bddK9nS1R_s","name":"Tomoko Furuki (@komo_fr)","profile":"株式会社ビープラウド所属。大学では知能情報メディアを専攻し、就職後はメーカーにてソフトウエア開発とPythonによるデータ活用のPoCや機械学習の取り組みを経験。科学技術計算分野へのPythonの活用に関心があり、現在は会社ではPythonを使ったデータ解析を、大学では研究のためのソフトウエア開発に従事。\r\n\r\n著書: 朝倉書店 『Python インタラクティブ・データビジュアライゼーション入門 ―Plotly/Dashによるデータ可視化とWebアプリ構築― 』（共著）"},{"id":"272415","title":"Python x DDD!! - Python で学ぶ実践的なドメイン駆動設計とレイヤード・アーキテクチャ","room":"#pyconjp_5","day":"10/15","start_time":"17:00","no":"6","elevator_pitch":"ドメイン駆動設計（DDD）やクリーンアーキテクチャといった話題は定期的に盛り上がりを見せますが、Pythonにおける実践的な解説はいまだ多くありません。このセッションでは、分かりやすく具体的なコード例を織り交ぜながら、これらについて解説を行います。聴衆は、他の言語の仕様や実例と比較したうえで、フラットな目線で Python で DDD に取り組むことの良い点と課題点を見つけることができるでしょう。","prerequisite_knowledge":"・Python のクラスに関する知識\r\n・オブジェクト指向の知識\r\n・なんらかのレイヤードアーキテクチャの初歩的な知識（名前を聞いたことがある、程度）\r\n・サーバーサイドWebアプリケーションの開発基礎知識","audience_takeaway":"オーディエンスは、次のナレッジを持ち帰ることができます。\r\n\r\n・Pythonでレイヤード・アーキテクチャ（オニオン・アーキテクチャ）を採用して開発を進めるうえでの前提となる知識\r\n・ドメイン駆動設計およびレイヤードアーキテクチャに取り組むうえでの、Python と他言語（Go や Dart）の比較や留意事項など\r\n・Python でレイヤードアーキテクチャを実践するためのプラクティス\r\n・SQLAlchemy などの O/R Mapper ライブラリとリポジトリパターンを組み合わせるメリット\r\n・Python で Unit of Work パターンを実践するためのアイデア\r\n・ユニットテストからみたレイヤード・アーキテクチャ","audience_python_level":"Advanced","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Both","description":"このセッションでは、Pythonで実装するWebアプリケーションを題材に、ドメイン駆動設計やレイヤード・アーキテクチャのプラクティスに触れながら、Pythonでこれらに取り組むことのメリットやデメリットについて解説します。\r\n\r\n【トーク構成】\r\n1. OOPとしてのPythonひとめぐり - ポリモーフィズムとPython\r\n2. ドメイン駆動設計の構成要素とPythonにおける実装例\r\n3. ユースケース駆動開発\r\n4. オニオン・アーキテクチャの構成要素とPythonにおける実装例\r\n5. リポジトリパターン 〜 SQLAlchemyとの共存\r\n6. RESTFul APIにおけるCQRS, UoW パターンの実践\r\n7. 他の言語との比較、Pythonで取り組む意味","duration_min":"30","slide_url":"https://speakerdeck.com/iktakahiro/ddd-and-onion-architecture-in-python","recording_url":"https://youtu.be/u_uKTDbUWh0","name":"iktakahiro","profile":"ITベンチャー数社を経て、2015年に東証マザーズへのIPOを経験後、起業。紆余曲折を経て 2019年に株式会社Hakali へ取締役CTOとして参画。「心の健康を支えるデジタル・メンタル・プラットフォームを実現する」をミッションに、「Awarefy」事業の立ち上げに従事。Python、Go、Dart、TypeScript が好き。\r\n\r\n著書に、『改訂版 Pythonユーザのための Jupyter[実践]入門 (2020年, 技術評論社)』、『これからはじめる SQL 入門 (2018年, 技術評論社)』などがある。"},{"id":"291439","title":"Lightning talks","room":"#pyconjp","day":"10/15","start_time":"18:15","no":"7","elevator_pitch":"応募フォーム / Apply from https://forms.gle/oyJJj47p6yQA19T87","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"","lang_of_slide":"","description":"Detail: https://pyconjp.blogspot.com/2021/10/lt-application-started.html","duration_min":"30","slide_url":"","recording_url":"https://youtu.be/Dk_QkLQIPMU","name":"PyCon JP 2021 Attendees (LT speakers)","profile":""},{"id":"493be128-8d63-4437-8aa5-3ec2223f6d30","title":"Closing (Day 1)","room":"#pyconjp","day":"10/15","start_time":"18:45","no":"8","elevator_pitch":"","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"","track":"","lang_of_talk":"","lang_of_slide":"","description":"","duration_min":"30","slide_url":"","recording_url":"","name":"","profile":""},{"id":"21175b25-cd82-4ca8-8180-156b60188ca5","title":"Venue open / 開場","room":"#pyconjp","day":"10/16","start_time":"09:30","no":"","elevator_pitch":"","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"","track":"","lang_of_talk":"","lang_of_slide":"","description":"","duration_min":"30","slide_url":"","recording_url":"","name":"","profile":""},{"id":"290207","title":"Opening (Day 2)","room":"#pyconjp","day":"10/16","start_time":"10:00","no":"1","elevator_pitch":"Language of Talk: Both (Japanese $ English)","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"","lang_of_slide":"English only","description":"スポンサーのPR動画放映も含みます / Including sponsor's PR video","duration_min":"30","slide_url":"","recording_url":"","name":"PyCon JP 2021 Staff","profile":""},{"id":"290209","title":"Keynote: Mr. Brandt Bucher","room":"#pyconjp","day":"10/16","start_time":"10:30","no":"2","elevator_pitch":"ブラント ブーカー氏による2日目の基調講演です（日本語に同時通訳されます）","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"English","lang_of_slide":"English only","description":"","duration_min":"60","slide_url":"","recording_url":"https://youtu.be/ggPJLwIbbyY","name":"Brandt Bucher","profile":"https://pyconjp.blogspot.com/2021/08/pycon-jp-2021-2-announcement-of-keynote.html"},{"id":"269506","title":"Pythonによるアクセスログ解析入門","room":"#pyconjp_1 (15th: onsite)","day":"10/16","start_time":"11:40","no":"3","elevator_pitch":"本講演では、Webサービスのアクセスログを題材に、Pythonを用いた実装も含めたデータ解析の技法や数々の応用事例を紹介します。具体的には、講師が所属する日本経済新聞社の事例を題材に、記事の閲覧数の集計や推薦を扱います。他社事例として、講師が上位に入った国際的な機械学習コンペティションの話題も取り上げ、国内外でのアクセスログ解析の一端を紹介します。\r\n","prerequisite_knowledge":"参加者には、Pythonの基礎的な文法を理解している程度の知識を要求します。pandasや機械学習など個別の話題については、概要やライブラリの使い方を具体的に解説する予定です。\r\n","audience_takeaway":"- アクセスログ解析の概要\r\n- pandasの概要・便利な機能\r\n- 日本の事業会社における活用事例\r\n- 国際的な活用事例\r\n","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"Internet of things（IoT）・デジタルトランスフォーメーション（DX）などの流行語と共に、さまざまな業界でデータの蓄積・利活用が進んでいます。身近なところでは、日々利用するさまざまなアプリケーションで利用履歴がアクセスログとして記録され、個人の嗜好に合わせたコンテンツの表示など、ユーザ体験の向上に繋がっています。\r\n\r\n本講演では、このようなアクセスログを題材に、Pythonを用いた解析・推薦の技術を紹介します。本講演の講師は10年近くにわたり報道機関に所属し、ここ数年はニュース記事を用いたアクセスログ解析の業務に携わってきました。本講演では、アクセスログ解析の技法や考え方について、業務の中で頻繁に利用するPythonのライブラリによる具体的な実装と合わせて解説します。\r\n\r\n構成とタイムラインは以下のとおりです。導入では、アクセスログ解析の概要を解説します。その後、講師が所属する日本経済新聞社の事例として記事閲覧数や記事推薦の話題を取り上げます。ここでは、著名なPythonのライブラリであるpandasの概要や便利な機能を紹介しつつ、具体的な機械学習のプロジェクトも紹介します。最後に他社の事例として、講師が参加して上位に入った国際的な機械学習コンペティションでの事例を取り上げます。講演全体を通じて、アクセスログ解析の基礎やさまざまな応用例に触れていただく機会になります。\r\n\r\n- 発表の概要・目次\r\n- 自己紹介\r\n- 新聞社でのアクセスログ解析\r\n- 日本経済新聞社での活用事例1：記事閲覧数の集計\r\n- 日本経済新聞社での活用事例2：記事推薦\r\n- 機械学習コンペティション\r\n- まとめ\r\n","duration_min":"30","slide_url":"https://speakerdeck.com/upura/tutorial-on-access-log-analysis-by-python","recording_url":"https://youtu.be/_EqrNN5Ld-w","name":"石原 祥太郎","profile":"日本経済新聞社の研究開発部署「日経イノベーション・ラボ」で、上級研究員としてデータ分析・サービス開発に従事。社外活動として国内外の機械学習コンテストで入賞経験を持つ。入門書『PythonではじめるKaggleスタートブック』（講談社、石原祥太郎／村田秀樹・著）の執筆や、勉強会の主催・登壇など、積極的な情報発信にも努めている。2020年、国際ニュースメディア協会より「30 Under 30 Awards and Grand Prize」を受賞。"},{"id":"270686","title":"実践Streamlit & Flask - AIプロジェクトのプロトタイピングから本番運用までをいい感じにするPythonicなやりかた","room":"#pyconjp_2","day":"10/16","start_time":"11:40","no":"3","elevator_pitch":"AIプロジェクトにおいて, Webアプリケーションを開発し, 本サービスとして構築・運用するために何が必要で何が大切か?\r\n\r\nというテーマでお話します。\r\n\r\n・Streamlitによるプロトタイプ開発とPoC検証\r\n・Flask/FastAPIを使ったWebアプリケーション開発\r\n・GCPを使ったホスティングと高トラフィック対策\r\n\r\nこちらを「AIワクチン接種予測」という実際のサービス事例および, サンプルのアプリケーションを元に紹介します。","prerequisite_knowledge":"【必須】\r\n・Pythonを使ったWebアプリケーション開発の経験（Frameworkは問わず）\r\n・Webアプリケーションをクラウド上で構築・運用をしたことがある（AWS, GCP, Azure等, なんでも結構です）\r\n\r\n【あると望ましい】\r\n・AWS Lambda, Google Cloud Functionsなど, 関数ベースのサーバレスなサービスでWebアプリ開発経験がある\r\n・FastAPI, FlaskでのWebアプリケーション開発\r\n・フロントエンドアプリ開発（React, Vue.js, Angular何でもOK）","audience_takeaway":"・機械学習プロジェクトなど, データサイエンティストが作ったプロトタイプを本番サービスとしてローンチするためのノウハウ・勘所\r\n・Webサイトの高トラフィック対策. 特にクラウド上でWebサービスを運用する際にやったほうがいい・気をつけるべきこと\r\n・FlaskやFastAPIといった軽量Frameworkを使うときのパッケージ構成の考え方\r\n・Webアプリケーション開発するエンジニアと, 機械学習エンジニアおよびプロダクトオーナーが円滑にコミュニケーションを進める方法","audience_python_level":"Intermediate","track":"Web programming","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"クラウドサービスの発展・発達ですぐにでもWebサービス立ち上げができたり, ちょっとした機械学習もクラウドサービスでいい感じに出来るようになった昨今。\r\nスタートアップのサービス立ち上げ, 大企業の新規事業やDXなプロジェクトといった「AI・データサイエンスでいい感じなプロダクトが欲しい」という機会が増えた気がします。\r\n\r\n例えばJX通信社では, 2021年2月に「AIワクチン接種予測」というプロダクトをリリースしました。\r\nこちらのプロジェクトは限られた期間で「AI・データサイエンスでいい感じにしてくれ」といった比較的難易度が高いオーダーではじまったのですが,\r\n\r\n・データサイエンティスト向けのWeb Framework「Streamlit」で概念実証（PoC）\r\n・Flask, FastAPIといった軽量Frameworkを活用し本プロダクト開発・運用\r\n・Google App Engine（GAE）, Cloud Runを全力で活用したサーバレスな運用\r\n\r\nといった技術スタック・思想でこの難関なプロジェクトを乗り切りました。\r\n\r\nこのトークでは,\r\n\r\n・データサイエンティストがStreamlitでプロトタイプを作りながらPoCを上手く回す方法\r\n・PoCから本サービス開発の移行でFlask/FastAPIを使ったサービス開発の勘所\r\n・GAEやCloud Runといったサーバレス（自分でサーバーの面倒を見ない）なサービスを活用した運用のノウハウ\r\n\r\nというストーリーを元に,\r\n\r\n・データサイエンティストがやるべきWebアプリケーション開発\r\n・パッケージ構成やテスト, CIを如何にいい感じにやるか?\r\n・クラウドサービスを駆使してTV出演（TV砲）などで突然の高トラフィック対策を求められる際にいい感じにやる方法\r\n\r\nといった, 「クラウド・AI全盛期の今どきなWebアプリケーション・サービス開発」をPython使いの視点でご紹介します。\r\n\r\n【Outline（予定）】\r\n\r\n・自己紹介\r\n・Streamlitを使った爆速プロトタイピング\r\n　- プロトタイプすなわち動くアプリケーション\r\n　- ひとまずStreamlitで作る&共有する\r\n　- 本プロダクト開発を意識したアプリケーション構成とテスト\r\n・Flaskでバックエンドを作る\r\n　- FastAPIとFlaskの使い分け?\r\n　- Streamlitプロトタイプからの移植\r\n・Google App EngineとCloud Runでの本番運用\r\n　- TV砲に耐えるための技術\r\n・小ネタ - 動的なアイキャッチ画像生成をFastAPIで実現する\r\n・まとめ - クラウド&サーバレス時代のアプリケーションの作り方","duration_min":"30","slide_url":"https://speakerdeck.com/shinyorke/service-development-with-streamlit-and-flask","recording_url":"https://youtu.be/dIt-loWB_zI","name":"shinyorke","profile":"サーバーサイドおよびデータサイエンス, DX関係の色々なエンジニアリングとマネジメントを生業とするシニアエンジニア.\r\n個人としては「野生の野球データサイエンティスト」として野球データの分析や考察をブログ・登壇で発表しており, Python使いな人たちから「野球の人」と呼ばれている."},{"id":"271453","title":"他人が書いたコードのリファレンスをSphinxで作る方法","room":"#pyconjp_3","day":"10/16","start_time":"11:40","no":"3","elevator_pitch":"他人が書いたコードを保守する羽目になったら、あなたはどうしますか？コードにはところどころコメントは入っていますがdocstringはついていません。そのうえ書いた本人は退職してしまい、引き継ぎで受け取った設計書には大したことは書いてありません。\r\nこのトークでは、実体験をベースにして、データ分析スクリプト群のリファレンスをSphinxで手軽に作り、更新していく流れを共有します。","prerequisite_knowledge":"Pythonのモジュール、クラス、関数という概念をうっすらでもよいので知っていること。他人が書いたコードを読むのに苦労したことがあれば、より理解しやすいと思います。","audience_takeaway":"コードを書くのにいちいちドキュメントを作るのが面倒くさいと思っている人に、docstringを書いておくだけで十分使えるリファレンスが簡単に作れること、その後のコード修正の際も簡単にリファレンスが更新できることを実感いただけます。","audience_python_level":"Intermediate","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"データ分析系のコードは、試行錯誤を重ねるのが普通ということもあり、あまりドキュメントが整備されていないことが多い。コードを書いた本人が自分向けにコメントをつけていればまだよいほうで、ときにはコメントすらもほとんどないコードもよく見かける。\r\n\r\nところが試行錯誤の結果「これいいね」となると、そのコードがそのまま通常業務に組み込まれてしまい、コードを書いた本人以外のメンバーも利用する状態になることがある。そうするとそのコードは使い捨てのものから保守対象に変化する。\r\n\r\n本人が在籍しているうちは本人に保守させればよいのだが、別の組織に異動してしまったり、場合によっては退職してしまうと、ドキュメントのない不思議なコードだけが保守対象として残ってしまう。\r\n\r\nせめてクラスや関数のリファレンスがあれば何とか保守を引き継げそうなものだが、当然それもない。\r\n「簡単な設計書つけておきました〜」などと引き継ぎのときに言われても信じてはいけない。往々にしてそれは本当に簡単なもので、役に立たないからだ。\r\n\r\n本発表では、そういう状況で残されたドキュメントのないコード（複数モジュール）を読みこなして適切にdocstringを追記し、Sphinxを活用してクラスと関数のリファレンスを作成した実体験に基づき、いかにパワーをかけずに必要最低限のドキュメントを作成・維持していくかについて共有する。\r\n\r\n紹介するのはデータ分析スクリプトだが、他の目的で作成されたスクリプトであっても同様の状況は起こりうる。このような苦労を招かないよう、普段からdocstringを記述することを啓蒙したい。\r\n\r\n構成とタイムラインは下記を想定している。\r\n\r\n1. 自己紹介、課題意識の共有（3分）\r\n2. 元となるコードの概要紹介（3分）\r\n3. docstringをつけていく（7分）\r\n4. Sphinxの設定とリファレンスの作成（7分）\r\n5. 陳腐化させない工夫（5分）\r\n6. まとめ・提言（3分）\r\n\r\nバッファ2分\r\n\r\n\r\n","duration_min":"30","slide_url":"https://www.slideshare.net/ssuseredc996/sphinx-250454287","recording_url":"https://youtu.be/RlOe3Yjnb7A","name":"Takeshi Sugiyama","profile":"Using Python since 2014"},{"id":"273834","title":"ＭＶＣアーキテクチャを Dash で理解する","room":"#pyconjp_4","day":"10/16","start_time":"11:40","no":"3","elevator_pitch":"ＭＶＣアーキテクチャ は、インタラクティブなWebアプリケーションを実装する際のフレームワークの一種です。\r\n\r\nこのトークでは、インタラクティブなWebアプリを作成できるWebフレームワーク Dash を例に ＭＶＣアーキテクチャ を理解していただくと同時に、Dash や Streamlit などの仕組みも理解できます。\r\n\r\nみなさん、自分のアイデアをWebアプリにしてみませんか。","prerequisite_knowledge":"特になし","audience_takeaway":"・ＭＶＣアーキテクチャを理解できる。\r\n・DashでインタラクティブなWebアプリの仕組みを理解できる。\r\n・Streamlitの特異な仕組みも理解できる。\r\n・今回紹介するWebアプリで、DashでWebアプリを容易に作成できる。","audience_python_level":"Beginner","track":"Web programming","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"ＭＶＣアーキテクチャは、インタラクティブなWebアプリケーションを実装する際のフレームワークの一種です。\r\n一方、Dash は、インタラクティブなWebアプリが作成できるPython の Webフレームワークです。\r\nこのトークでは、Webフレームワーク Dash のコードや具体的な動きを見て、ＭＶＣアーキテクチャを解説します。\r\n\r\nＭＶＣアーキテクチャというメタ知識を理解することは、Dash をはじめ、他のインタラクティブなWebフレームワークを習得する一助になると私は考えます。\r\nその一例として、最近話題の Streamlit についてもＭＶＣアーキテクチャの観点から、その独特な仕組みについて解説します。\r\n\r\n最後に、Dash を習得する際に初心者が手間取りそうな問題点を説明し、その問題点の克服するWebアプリをDashで作成しましたので紹介します。\r\n\r\n構成とタイムラインは以下のとおりです。\r\n\r\n- 導入（5min）\r\n　- 自己紹介\r\n　- ＭＶＣアーキテクチャとは\r\n　- Dashの紹介\r\n- MVCアーキテクチャをDashで理解する（10min）\r\n　- View\r\n　- Model\r\n　- Controller\r\n- Streamlit について（3min）\r\n　- ＭＶＣアーキテクチャで理解する\r\n- 自作アプリの紹介（7min）\r\n　- 初心者が感じる問題点\r\n　- デモンストレーション\r\n- まとめ（1min）","duration_min":"30","slide_url":"https://docs.google.com/presentation/d/1-UOKFHwrWlaAtuwMiRXAkGf_aN7XWDwTZlTJQF-lolo/edit?usp=sharing","recording_url":"https://youtu.be/fn2J1YtbnWk","name":"malo21st","profile":"今年７月末にサラリーマン生活を早期リタイアして、Pythonアルバイターやってます。（お仕事ください）"},{"id":"272378","title":"Better Python Testing With Nimoy","room":"#pyconjp_5","day":"10/16","start_time":"11:40","no":"3","elevator_pitch":"I've created Nimoy - a Python DSL which makes testing fun again. In this session I will show how Nimoy combines the power of DSLs and Domain Driven Testing, to help you test better","prerequisite_knowledge":"Audience should be familiar with current Python testing techniques","audience_takeaway":"The audience will learn about the power of DSLs and Domain Driven Testing, through examples of how to test with Nimoy","audience_python_level":"Intermediate","track":"Python core and around","lang_of_talk":"English","lang_of_slide":"English only","description":"Python has a super rich and active ecosystem, and py.test is great, but I believe we can do even better.\r\nThis is why I've developed a new testing framework and DSL named \"Nimoy\".\r\nHeavily inspired by the Spock testing framework, the framework introduces a DSL that improves Python testing and challenges Pythonic idioms.\r\nUsing Nimoy, I set out to make Python testing beautiful, expressive, pragmatic and fun.","duration_min":"30","slide_url":"","recording_url":"https://youtu.be/-6h7hGxxSmk","name":"Noam Tenne","profile":"A hacker-hearted software engineer and DevOps Cowboy. Has been working on both cloud based and on-premise platforms, gaining much experience in building scalable, mission critical web applications and microservices. Now wreaking havoc at Healthy.io"},{"id":"290212","title":"ランチタイムセッション","room":"#pyconjp","day":"10/16","start_time":"12:40","no":"4","elevator_pitch":"Day2ランチタイムにスペシャルパネルディスカッションを開催します！","prerequisite_knowledge":"特になし。どなたでもご参加いただけます","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"ここでしか聞けないような話題が盛りだくさんです。\r\nランチを食べながら是非お聞きください。","duration_min":"50","slide_url":"","recording_url":"https://youtu.be/rOc7qWkjCGc","name":"PyCon JP 2021 Platinum sponsors","profile":"https://2021.pycon.jp/sponsors"},{"id":"290214","title":"スペシャルブース紹介","room":"#pyconjp","day":"10/16","start_time":"13:30","no":"5","elevator_pitch":"スペシャルブースを紹介する10分のコーナーです。各社30秒×13ブースです！","prerequisite_knowledge":"特になし。スペシャルブースはどなたでも回れます","audience_takeaway":"興味を持ったスペシャルブースを休憩時間にぜひ訪れてみてください。あいことばを集めるスタンプラリーもあります！","audience_python_level":"All","track":"","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"","duration_min":"10","slide_url":"","recording_url":"","name":"PyCon JP 2021 Platinum & Gold sponsors","profile":"https://2021.pycon.jp/sponsors"},{"id":"273602","title":"Pythonのバリデーション定義からフロントエンドTypeScriptのコード生成","room":"#pyconjp_1 (15th: onsite)","day":"10/16","start_time":"13:50","no":"6","elevator_pitch":"バリデーションライブラリ Marshmallow の Python のクラス定義を解析し、 TypeScript のコードを動的生成するツールを開発した。これにより、型定義とバリデーション実装の共通化を可能とした。","prerequisite_knowledge":"基本的なWeb開発の知識\r\nコード解析、TypeScriptについての知識があると尚可","audience_takeaway":"- フロントエンドとバックエンドの統合の手法\r\n- 簡単な動的解析のやり方や、コードの動的生成とその運用のプロセス","audience_python_level":"Intermediate","track":"Outside of Python language","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"自社開発のデータ分析・活用プロダクトを新規開発する際、バックエンドに Flask、フロントエンドに TypeScript を採用しました。ですが、 JSON API の リクエスト/レスポンスの型定義の管理が人力で行なわれており、抜け漏れやタイプミス、undefined エラーが多発してしまうことが問題でした。\r\n\r\nそこで、プロダクトで利用していたバリデーションライブラリ Marshmallow のクラス定義を動的解析し、JSON API の TypeScriptの型定義生成、およびフォームのバリデーション関数の実装生成を行うツールを開発しました。これにより、APIのスキーマにTypeScriptの型が追従するようになり、またフロントエンドのフォームのバリデーションとバックエンドによるバリデーションの共通化ができるようになりました。\r\n\r\n発表では、Pythonの動的解析やTypeScriptコード生成の具体的な方法のほか、実際の開発プロセス中でこのツールがどのように運用されているかもデモを交えながらご紹介します。\r\n\r\n発表のアウトライン（時間は目安です）\r\n\r\n・はじめに、自己紹介(2分)\r\n\r\n・背景説明(TypeScriptの基礎やMarshmallowの説明) (5分)\r\n\r\n・具体的な実装方法とCIへの組み込み (15分)\r\n\r\n・コード生成のデモ(3分)\r\n\r\n・まとめと展望(4分)\r\n\r\n","duration_min":"30","slide_url":"https://speakerdeck.com/brainpadpr/pythonfalsebaridesiyonding-yi-kara-hurontoendotypescriptfalsekodosheng-cheng","recording_url":"https://youtu.be/GIiLPv5iqXU","name":"一宏 柴内","profile":"株式会社ブレインパッドのソフトウェアエンジニア。データ活用プロダクトの基盤開発に従事。"},{"id":"273843","title":"絵を読む技術 Pythonによるイラスト解析","room":"#pyconjp_2","day":"10/16","start_time":"13:50","no":"6","elevator_pitch":"このトークは、イラストの鑑賞や制作をより楽しむための知識とスクリプトを紹介します。\r\n前半では、イラストの構成要素から、それらを効果的に組み合わせる構図まで、できるかぎり体系的に解説します。\r\n後半では、前半で解説した内容を踏襲して、実際のイラスト鑑賞・制作に応用するためのPythonスクリプトをいくつか紹介します。","prerequisite_knowledge":"絵画やイラストへの興味があれば、他に必須の知識はありません。","audience_takeaway":"・絵画やイラストの見方\r\n・イラストの構成や構図の知識\r\n・イラストのラフや下地のパターンを手軽に手に入れる方法\r\n・Pythonでイラストを楽しむTips","audience_python_level":"Intermediate","track":"Only for fun or try new technique","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"絵画やイラストは、多くの人々の目を引きつけます。\r\nしかし、多くの人はなぜ自分がその絵画やイラストに惹かれるのか、論理的な説明ができません。\r\nこの問題は、駆け出しの絵師やイラストレーターが戦略的に絵を描くことができないことにも共通します。\r\nこのトークでは、イラストが目を引く論理を解説し、Pythonでイラストを分析・制作するいくつかの方法を紹介します。\r\n\r\n前半は、イラストを構成する要素と、それらを組み合わせるパターンの解説です。\r\nイラストを線、色、明度、シェイプなどの構成要素に分解し、それらを効果的に配置するための技法を解説します。\r\n構成要素について理解を深めたら、それらを組み合わせた構図について学び、実際の絵画やイラストを見ながらパターンを探ります。\r\n\r\n後半は、イラストの分析や下地の生成に使えるPythonスクリプトをいくつか紹介します。\r\n紹介するのは、画像を単純な要素に変換するスクリプトと、絵画やイラストから学習したパターンをランダムに生成するスクリプトです。\r\n他にも、当日用意できる限りのスクリプトを紹介します。\r\n\r\n構成とタイムラインは次の通りです。\r\n\r\n- 導入（3min）\r\n　- 自己紹介\r\n　- 共感\r\n　- プレゼンの目的\r\n- 前半：イラストの構成や構図を紐解く（10min）\r\n　- イラストの構成要素\r\n　- 構成要素のタイプや配置による効果\r\n　- 感情を動かす構成要素別の要因\r\n　- 色やライティングで変化するストーリー性\r\n　- キャラクターをメインとした構図パターン\r\n　- 背景をメインとした構図パターン\r\n- 後半：イラスト鑑賞・制作のためのPythonスクリプト（10min）\r\n　- 画像を単純な要素に変換するスクリプトの解説と活用方法\r\n　- 頻出パターンをランダム生成するスクリプトの解説と活用方法\r\n　- その他スクリプトの解説と活用方法\r\n- おすすめの学習リソース (1min)\r\n- まとめ (1min)\r\n\r\nなお発表当日は、著作権に十分配慮した絵画やイラストを例として使用します。","duration_min":"30","slide_url":"https://www.slideshare.net/HiroyaKato1/python-250452255","recording_url":"https://youtu.be/Evs32dt85QY","name":"Hirosaji","profile":"Web Enginner / Illustrator"},{"id":"272259","title":"Loggingモジュールではじめるログ出力入門","room":"#pyconjp_3","day":"10/16","start_time":"13:50","no":"6","elevator_pitch":"ログを出力したいとき、皆さんはどうしていますか？\r\nこのトークでは、Pythonに標準搭載されているLoggingモジュールをご紹介します。\r\nモジュールの利用シーンや仕様、実装例を確認しつつ、AWSとGCPの一部サービスにおける出力例をお見せします。\r\nこのトークがLoggingモジュールを知るうえでの見取り図になれば嬉しいです。","prerequisite_knowledge":"- Python でのコーディング経験\r\n- 標準出力や標準エラー出力に関する基礎知識","audience_takeaway":"- Logging モジュールを利用するか否かの判断基準\r\n- Logging モジュールの構成部品に対する理解\r\n- Logging モジュールの利用方法と実装例","audience_python_level":"Intermediate","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"Python に標準搭載されている Logging モジュールの仕様を確認しつつ、具体的な利用方法について紹介することで、ログをより便利に楽しく出力する方法をお伝えします。トークは以下に述べる4部構成です。\r\n\r\n第1部では、自己紹介と、このトークのゴールである「Logging モジュールを知るうえでの見取り図を届ける」について述べます。\r\n第2部では、Logging モジュールの仕様と実装例を紹介します。モジュールの存在理由と利用シーンを紹介しつつ、Logger や Handler、 LogRecord などの構成要素がどのような順番で作用してログが生成されるのか、その出力に至るフローを辿り、実装例をお見せします。\r\n第3部では、AWS・GCP が提供するサービスにおける、Python ログ出力について紹介します。サービス特有の仕様により、ログ出力が想定した形でなされないケースがあります。第2部で紹介した内容をベースに実装例を紹介します。\r\n第4部では、セッション内容を総括するとともに、どのようなログを出力するとよいのか？に関する私見を述べます。\r\n\r\n1. はじめに(3 min)\r\n    - 自己紹介\r\n    - 当セッションのゴールと持ち帰れるもの\r\n2. Logging モジュール探訪(15 min)\r\n    - モジュールの目的\r\n    - 利用シーンと判断基準\r\n    - 構成要素\r\n    - 出力フロー\r\n    - logging.warning と logger.warning の違い\r\n    - バージョン間の差異\r\n    - 時刻に関するTips\r\n    - Python 3.9 での実装例\r\n3. パブリッククラウドサービスにおけるPythonログ出力(10 min)\r\n    - The Twelve-Factor App\r\n    - Amazon Web Services\r\n        - Amazon CloudWatch Logs\r\n        - AWS Lambda(Zip)\r\n        - AWS Lambda(Container)\r\n        - AWS Glue(Python Script)\r\n    - Google Cloud Platform\r\n        - Google Cloud Logging\r\n        - Google Cloud Functions\r\n        - Google Cloud Run\r\n4. おわりに(2 min)\r\n    - セッション内容のまとめ\r\n    - 理想的なログとは？に関する私見","duration_min":"30","slide_url":"https://speakerdeck.com/tosh2230/introduction-to-python-logging-9744df54-fd32-476c-aae2-88ef948ba522","recording_url":"https://youtu.be/ahaslerbm_g","name":"Toshifumi Tsutsumi","profile":"データエンジニア。SIer、製造業を経て2020年12月より現職。AWSやGCPでわいわいするのが好きです。\r\nTwitter: @tosh2230"},{"id":"273529","title":"PythonとUnityで手軽に強化学習をやってみよう！","room":"#pyconjp_4","day":"10/16","start_time":"13:50","no":"6","elevator_pitch":"UnityとPython（TensorFlow）を連携させることで、シミュレータを利用した強化学習をおこなうことができます。\r\nUnity社が公式に提供している「Unity ML-Agents Toolkit」を利用することで手軽に環境構築が可能です。\r\nこの発表を聞くことで強化学習やUnityに対する理解が深まるとともに、「Unity ML-Agents Toolkit」の仕組みや使い方を知ることができます。","prerequisite_knowledge":"以下の前提知識があれば理解の助けになりますが、発表中に説明を含めますし難しい内容は話さないのでなくても問題ありません。\r\n- 強化学習\r\n- TensorFlow\r\n- Unity","audience_takeaway":"- 強化学習についての簡単な理解\r\n- Unityについての簡単な理解\r\n- 「Unity ML-Agents Toolkit」を利用した強化学習のやり方や仕組み","audience_python_level":"Beginner","track":"Machine learning","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"UnityはUnity社が提供しているゲーム開発エンジンです。\r\nUnityでは3Dモデルの物理演算やシミュレーションを手軽に実施することができます。\r\nUnity社から提供されている「Unity ML-Agents Toolkit」を使用することでPython（TensorFlow）とUnityを連携させて強化学習をおこなうことができます。\r\n\r\n本発表では「Unity ML-Agents Toolkit」を使用した強化学習について発表します。\r\nまず強化学習やUnity、TensorFlowについて簡単に説明します。\r\nその後「Unity ML-Agents Toolkit」の仕組みや使い方を解説します。\r\n最後に「Unity ML-Agents Toolkit」を使用した事例を紹介します。\r\n\r\n- 導入（2分）\r\n  - 自己紹介\r\n- 強化学習についての説明（7分）\r\n  - 強化学習とは\r\n    - シミュレータ内でエージェントに行動させ、獲得報酬が最大化するような推論モデルを生成する手法\r\n  - 強化学習をおこなうために必要な要素\r\n  　- シミュレータと学習・推論する仕組みが必要\r\n-「Unity ML-Agents Toolkit」についての説明（8分）\r\n  - Unityとは\r\n   - UnityはUnity社が提供しているゲーム開発エンジン\r\n   - 3Dモデルの物理演算やシミュレーションを手軽に実施できる\r\n  - 「Unity ML-Agents Toolkit」とは\r\n   - Unity社から提供されている(公式ツール) \r\n   − UnityとTensorFlowを利用して強化学習を行うためのツール\r\n  - TensorFlowとは\r\n   - Googleが中心となって開発しているオープンソースの機械学習ライブラリ\r\n  - 「Unity ML-Agents Toolkit」の仕組み\r\n   - Unityがシミュレータとなり、学習・推論はTensorFlowが行う\r\n   - Unity内での行動結果をTensorFlowに入力し、学習・推論する\r\n   - 推論結果をもとにUnity内で行動をおこなう\r\n-「Unity ML-Agents Toolkit」の使い方（7分）\r\n  - Unityと「Unity ML-Agents Toolkit」のインストール\r\n  - エージェントや報酬の設計\r\n  - 学習状況の確認\r\n-「Unity ML-Agents Toolkit」の応用例（5分）\r\n　− ゲーム開発での利用例（Unity社の事例紹介より引用）\r\n- まとめ（1分）","duration_min":"30","slide_url":"https://speakerdeck.com/shuheiyamada/pythontounityteshou-qing-niqiang-hua-xue-xi-woyatutemiyou","recording_url":"https://youtu.be/ny3hVBrO3ow","name":"YAMADA Shuhei","profile":"Unity, Machine Learning and Scrum"},{"id":"273275","title":"Flask 2.0 vs Fast API in REST API developments","room":"#pyconjp_5","day":"10/16","start_time":"13:50","no":"6","elevator_pitch":"This talk compares the features of Flask 2.0 with that of Fast API for REST API development by using the four comparison indicators. By explaining the variety, performance, flexibility, learning cost of both frameworks, it could help python engineers to choose one in their daily developments.","prerequisite_knowledge":"Experiences to use REST API, Architecture, Python, Data Science, ML","audience_takeaway":"- Features of Flask and Fast API\r\n- Strength and Week of Flask and Fast API\r\n- The way to use Flask and Fast API\r\n- How to choose the appropriate python framework ","audience_python_level":"Advanced","track":"Web programming","lang_of_talk":"English","lang_of_slide":"English only","description":"Target Audience:\r\nPython engineer working in data oriented projects, Machine Learning Engineer, Data Scientist, Data Engineer, Product owner/Project manager of data oriented products. \r\n\r\n【Introduction(3m)】\r\nBackground(1m):\r\nOne of the artifacts generated in Data and ML oriented projects can be REST API. When choosing the python framework, there seem to be many python engineers who wonder which frameworks is more appropriate, Flask or Fast API. Recently, Fast API seems to be getting more attention than before. On the other hand, Flask has major version up in May 2021 and the reputation as a most popular python framework according to the survey from Jet Brain which is \"Python Developers Survey 2020 Results\". \r\n\r\nIn order to help python engineers to decide which python framework should be used in their project, this talk summarizes the features of Flask 2.0 and Fast API through comparison and demonstration.\r\n\r\nMain updates of Flask 2.0(2m):\r\n- Nested Blueprint\r\n- Async/Await\r\n- Type Hinting\r\n- Others\r\n   -- 15x speed up of multipart/form-body\r\n   -- Routing shortcut\r\n   -- ...\r\n\r\n【Main Talk(25m)】\r\nFeatures of Flask 2.0 and Fast API(3m):\r\n- Overview of Flask 2.0 and Fast API\r\n- What libraries are installed after pip install each framework?\r\n\r\nFour Comparison Metrics between Flask 2.0 and Fast API(2m):\r\n- Variety of Functions / Extension / Tools\r\n- Performance(Speed and Stability) of sync and async\r\n- Flexibility of REST API Architecture\r\n- Learning Cost\r\n\r\n1. Variety of Functions / Extension / Tools(5m):\r\n- Flask\r\n  -- Flask Extensions\r\n     --- Introduce what each flask extension look like\r\n   -- Blueprint\r\n     --- code without blueprint\r\n     --- code with blueprint\r\n     --- code with nested blueprint\r\n\r\n - Fast API\r\n   -- Pydantic\r\n   -- Open API\r\n\r\n2. Performance(Speed and Stability) of sync and async(5m):\r\n- Introduce vegeta as a loading test tool\r\n- Flask2.0\r\n   -- Share the code which has sync and async implementation\r\n   -- Reports of each result of loading test \r\n     --- Speed and Stability\r\n\r\n- Fast API\r\n   -- Share the code which has sync and async implementation\r\n   -- Reports of each result of loading test\r\n     --- Speed and Stability\r\n\r\n3. Flexibility of REST API Architecture(5m):\r\n- Directory Design of API\r\n- Flask 2.0\r\n   -- Small API\r\n   -- Bigger API\r\n\r\n- Fast API\r\n   -- Small API\r\n   -- Bigger API\r\n\r\n4. Learning Cost(5m):\r\n- Complexity of Coding Styles\r\n   -- Compare the grammars of Flask 2.0 and Fast API\r\n- Resource Volumes as Learning Materials\r\n  -- Movies: the Numbers of Pycon Talks\r\n  -- Papers: the Numbers of Published Documents/Books\r\n  -- Share some learning materials in JP/Eng\r\n\r\n【Summary(2m)】\r\nSummary of Flask 2.0 and Fast API in ML API developments(2m):\r\n- Pro and Cons of both framework based on the four metrics\r\n- Future Work","duration_min":"30","slide_url":"https://speakerdeck.com/tetsuya0617/flask-2-dot-0-vs-fastapi-in-rest-api-development","recording_url":"https://youtu.be/nwnPr-5d0EI","name":"Tetsuya Jesse Hirata","profile":"Tetsuya is a software engineer based in Tokyo. He has been involved with several AI/ML projects in EdTech domain and has mainly been implementing ML APIs and ML Ops environment. Prior to this, he used to research the relationships between online learning behaviors and learning outcomes at the UCL Institute of Education (IOE) in the UK. His interest is in how to bridge the gap between data science and engineering.\r\n\r\nhttps://www.linkedin.com/in/tetsuya-hirata-a31b52134/\r\nhttps://twitter.com/JesseTetsuya\r\nhttps://medium.com/@JesseTetsuya"},{"id":"272672","title":"Vertex Pipelines ではじめるサーバーレス機械学習パイプライン","room":"#pyconjp_1 (15th: onsite)","day":"10/16","start_time":"14:50","no":"7","elevator_pitch":"このトークでは機械学習パイプラインを構築する方法について、具体的なノウハウを共有します。\r\nVertex Pipelines で用いられる Kubeflow Pipeline は現在、V1 から V2 へと大きな変更の途中であり、ドキュメントも未整備で、イチから使い始めることはなかなか困難です。\r\nこのトークを聞くことで、Vertex Pipelines を用いて機械学習パイプラインをサーバーレスに構築する方法の見当がつくようになります。","prerequisite_knowledge":"次の3点を前提とします\r\n\r\n- 機械学習についての基礎知識 (学習用/評価用データ、モデルの訓練、評価指標)\r\n- Python で何らかの CLI アプリケーションを作成した経験 (`argparse` を使ったことがある、程度)\r\n- コンテナの基礎的な知識 (`docker build`, `docker run` がわかる程度)\r\n\r\n時間の都合上コンテナの扱いについてはあまり詳細には触れません、Kubernetes の知識も不要です","audience_takeaway":"- 機械学習パイプラインについての基礎的な知識\r\n- Vertex Pipelines で機械学習パイプラインを動かすために必要な Kubeflow Pipelines SDK V2 の最低限の仕様\r\n- Kubeflow Pipelines SDK を用いた機械学習パイプラインの構築方法とハマりどころ\r\n","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"機械学習を本番環境で利用するための取り組みである MLOps が広く知られるようになってきました。\r\n中でも、機械学習における CI/CD に相当する CT (Continuous Training) を実現する機械学習パイプラインを、Kubeflow Pipelines を用いて紹介します。\r\n\r\nはじめに、機械学習パイプラインに要求される要件について概要を述べます。\r\nここでは機械学習パイプラインが満たすべきそれぞれの要件について確認します。\r\n機械学習パイプラインではその特性上、コードだけではなく、データとコードを合わせたバージョン管理が必要になります。\r\nまた、学習時には GPU を用いる必要があるケースもあり、柔軟な計算資源の確保も必要です。\r\n\r\n次に、Kubeflow Pipelines を用いたパイプラインの構築について概要を述べます。\r\nKubeflow Pipelines では Python を用いてパイプラインを構築できます。\r\nここでは、\"Hello, world\" のようなかんたんなパイプラインを用いて、実装方法を述べます。\r\nまた、GCP の Vertex Pipelines を用いることで、機械学習パイプラインをサーバーレスに構築できることを確認します。\r\n\r\n最後に、私が作成しているサンプルのパイプライン https://github.com/reproio/lab_sample_pipelines/tree/main/kfp を例に、実用的なパイプラインの構築例について述べます。\r\n\r\n構成とタイムラインは次のとおりです。\r\n\r\n- 導入 (2 min)\r\n  - タイトル\r\n  - 自己紹介\r\n- 機械学習パイプライン (5 min)\r\n  - 機械学習パイプラインとは\r\n  - 機械学習パイプラインに求められる要件\r\n    - データとコードのバージョン管理\r\n    - 柔軟な計算資源の確保\r\n  - Kubeflow Pipelines / Vertex Pipelines\r\n- Kubeflow Pipeline を用いたパイプライン構築 (10 min)\r\n  - Hello, world\r\n  - コンポーネントの実行順序の定義\r\n  - GPU の利用\r\n- Lab Sample Pipeline の紹介 (10 min)\r\n  - 仕様の説明\r\n  - ディレクトリ構造の説明\r\n  - コンポーネントの実装と単体テスト\r\n  - ComponentSpec の記述例\r\n  - パイプラインの実装\r\n  - ML Metadata によるコードとデータのバージョン管理\r\n- まとめ (2 min)","duration_min":"30","slide_url":"https://speakerdeck.com/asei/vertex-pipelines-dehazimerusabaresuji-jie-xue-xi-paipurain","recording_url":"https://youtu.be/ViDhh2WPZAs","name":"Sugiyama Asei","profile":"Kubeflow Pipelines, TFX のコントリビューター。業務では Repro で Software Engineer としてデータサイエンスや機械学習を用いた新規サービスの研究開発業務に従事中。「見て試してわかる機械学習アルゴリズムの仕組み 機械学習図鑑」の共著者のひとり。"},{"id":"273578","title":"High Performance FastAPI","room":"#pyconjp_2","day":"10/16","start_time":"14:50","no":"7","elevator_pitch":"スマートニュースでは、一部のサービスのバックエンドに FastAPI を採用しています。\r\n\r\nピーク時は秒間数万リクエストにも達するトラフィックを捌く Web アプリケーションを FastAPI で構築するためのノウハウとして、\r\nプロファイリングの手法から、我々が直面した課題やその対応策についてお話させていただきます。","prerequisite_knowledge":"- 基礎的なWebバックエンドプログラミングに関する知識\r\n- 基礎的なPythonに関する知識","audience_takeaway":"FastAPI および Python Web アプリケーションパフォーマンスチューニングの具体的な手法\r\n\r\n- プロファイリング手法とボトルネックの特定\r\n- 我々の環境で発生した具体的な課題とその対策","audience_python_level":"Intermediate","track":"Web programming","lang_of_talk":"Japanese","lang_of_slide":"Both","description":"スマートニュースは、「世界中の良質な情報を必要な人に送り届ける」ことをミッションに、\r\nクーポンや新型ウイルス、ワクチンアラームといった新しい機能を日々提供しています。\r\n\r\n高速にサービスを立ち上げ、かつ継続的にユーザーに価値を提供するためには、高速なイテレーションが欠かせません。\r\nこれらの目的を達成するため、一部のサービスではバックエンドサーバーで Python と FastAPI を採用しています。\r\n\r\nFastAPI を採用したあるサービスで、一部のユーザーへのテストローンチでは結果は上々。\r\nいよいよフルローンチ、という際にパフォーマンスの問題が立ちはだかりました。\r\n\r\nピーク時には秒間数万リクエストにも達するスマートニュースの膨大なトラフィックに、我々はどのように立ち向かったのか。\r\nFastAPI / Python Web アプリケーションにおけるプロファイリングの手法から、具体的に直面した課題やその対応策についてお話させていただきます。\r\n\r\nアウトラインは以下となります。\r\n\r\n1. Introduction / SmartNews における Python(5min)\r\n　- 自己紹介\r\n　- SmartNewsとPython\r\n　- FastAPI\r\n　- システム構成\r\n2. 負荷テストとプロファイリング(5min)\r\n　- 負荷テストツール\r\n　　- locust\r\n　- プロファイリングツールとボトルネックの特定\r\n　　- fastapi_profiler\r\n　　- py-spy\r\n　　- Datadog APM\r\n3. 直面した課題と対応(10min)\r\n　- FastAPI Web Application の構成とパフォーマンス特性\r\n　　- gunicorn -- uvicorn -- Starlette -- FastAPI\r\n　- I/O bound な処理\r\n　　- async/await\r\n　- CPU bound な処理\r\n　　- LRU Cache\r\n　　- Cython\r\n　　- numpyによるベクトル化\r\n　- logging performance ... multi-thread と GIL\r\n　　- async/await\r\n　- 処理系の変更による全体的な高速化\r\n　　- PyPy\r\n4. まとめ(1min)","duration_min":"30","slide_url":"https://speakerdeck.com/martin_lover/high-performance-fastapi","recording_url":"https://youtu.be/v3nznJoZwjM","name":"Ikuo Suyama","profile":"Backend Engineer, based on the Internet advertising industry."},{"id":"273836","title":"ラズパイとDashで環境ダッシュボードを作ろう","room":"#pyconjp_3","day":"10/16","start_time":"14:50","no":"7","elevator_pitch":"このトークでは、著者が作成しているセンサー情報のダッシュボードWebアプリの制作過程から、Pythonを使ったIoTとデータ可視化のWebアプリの作成方法について共有します。","prerequisite_knowledge":"Pythonの基本的文法,\r\nWebアプリの構造,\r\n電子部品のセンサー素子の種類（センサーの仕組みがわかると応用しやすいです）","audience_takeaway":"Raspberry PIとPythonを使った開発方法,\r\n環境センサーの情報取得方法,\r\nデータ可視化の手順,\r\nDashの基本的な扱い方","audience_python_level":"Intermediate","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"このトークでは、著者が作成しているセンサー情報のダッシュボードWebアプリの制作過程から、Pythonを使ったIoTとデータ可視化のWebアプリの作成方法について共有します。\r\n\r\nPythonはIoT界隈でもよく利用されている言語です。対応するサービス、デバイス、エコシステムが多数あります。Pythonを触ったことがある方でIoTや可視化を行う上で利用することができるデバイスやライブラリの組み合わせを、実際に作成したWebアプリを元に紹介します。\r\n\r\nPythonとIoTではラズパイ（Raspberry Pi）との組み合わせが普及しています。多数のセンサー（温度、湿度といった環境センサー）や一緒に利用するライブラリがありますが、今回はCircuitPython（マイコンボードで動作する組み込み向けのmicropythonのフォーク, adafruit社が開発元）のライブラリをRaspberry Pi上で利用する方法を紹介し、比較的初学者でも扱いやすいセンサーデータの取得方法を解説します。\r\n\r\nさらに可視化を行うに、Dashというデータ分析、可視化で利用されているWebアプリを用いてセンサー情報をWebアプリで表示する方法も紹介します。\r\n\r\n---\r\n\r\n構成について（時間は現時点で想定となります）\r\n\r\n* 導入（7min\r\n    * 自己紹介\r\n    * 著者作成のWebアプリの紹介\r\n    * Webアプリの全体構成\r\n* PythonとIoT（10min\r\n    * micropython/CircuitPythonの紹介\r\n    * Raspberry PiでPythonを扱う方法:VSCodeのリモート開発が便利です\r\n    * CircuitPythonのライブラリをRaspberry Piで扱う\r\n    * センサー情報取得の実例: BME280という温度湿度センサーから情報を取得する\r\n* Dashでセンサー情報を可視化する（10min\r\n    * Dashの紹介\r\n    * Dashの基本的な構成の紹介:\r\n        * HTMLを書く必要がない\r\n        * ホットリロードによる開発\r\n        * フォームなどの操作から動的な変更:コールバック機能\r\n    * センサー情報を可視化する\r\n    * Dashの便利なライブラリ: Dash bootstrap componets（dbc）によるデザインの整え方\r\n* まとめ（3min","duration_min":"30","slide_url":"https://github.com/hrsano645/slides/blob/master/20211015_pyconjp2021talk/slide.pdf","recording_url":"https://youtu.be/O1lSwemyY4A","name":"hrsano645","profile":"佐野設計事務所所属 \r\n静岡県富士市在住。普段は自動車機械設計業のITインフラ担当。\r\n静岡のPythonコミュニティに参加、PyCon mini Shizuokaのスタッフ"},{"id":"272767","title":"Pythonでつくる宣言的UIラッパーフレームワーク 〜 既存GUIフレームワークの調査を添えて","room":"#pyconjp_4","day":"10/16","start_time":"14:50","no":"7","elevator_pitch":"このトークでは、PythonでGUIを書くことに注目して、既存フレームワークの特徴と使用時の注意事項を概説します。\r\nまた、後半では自作した宣言的UIラッパーフレームワークの紹介を通じて、モダンな宣言的UIフレームワークの仕組みとともにPythonの柔軟な文法がもたらす実装のアイディアを示します。\r\nこのトークを聞くことで、Pythonでアプリをつくる際の選択肢が増え、GUIフレームワークの変遷を知り、同時にPythonの懐の深さに触れられるでしょう。","prerequisite_knowledge":"前半の「Pythonで使えるGUIフレームワークの概説」部分ではPythonの詳細な知識は不要です。ReactやVue.jsその他のGUIフレームワークを使ったことがあれば理解しやすいですが、必須ではありません。\r\nPython 3の基本的な文法、クラス、`with`ステートメントに関する知識を持っていると、後半の「自作した宣言的UIラッパーフレームワークの紹介」部分の理解がしやすいかと思います。","audience_takeaway":"- GUIフレームワークの変遷（Pythonに限らない一般的話題）\r\n- PythonでGUIを書くための既存フレームワークの特徴と注意事項\r\n- `with`ステートメントと`__new__()`メソッドを用いた実装のアイディア","audience_python_level":"Beginner","track":"Visual / Game / Music","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"導入では、私がPythonでGUIを書きたいと思ったきっかけについて述べ、その際にライセンスの問題でフレームワーク選定に苦労した経験を話す予定です。\r\n前半の「Pythonで使えるGUIフレームワークの概説」部分では、一般的なGUIフレームワークの変遷に沿って既存フレームワークを順次紹介し、メリットやデメリットを述べる予定です。\r\n後半の「自作した宣言的UIラッパーフレームワークの紹介」部分では、自作した宣言的UIラッパーフレームワークの紹介を通じて、モダンな宣言的UIフレームワークの仕組みとともに`with`ステートメントと`__new__()`メソッドを用いた実装のアイディアを示します。\r\n\r\n- 導入（5min）\r\n    - 自己紹介\r\n    - PythonでGUIを書きたい！\r\n- Pythonで使えるGUIフレームワークの概説（15min）\r\n    - 命令的UIフレームワーク（e.g. Tkinter, PyQt, PySide）\r\n    - テンプレートを用いた宣言的UIフレームワーク（e.g. Kivy, PyQt + QML, Enaml)\r\n    - コードによる宣言的UIフレームワーク (e.g. Flexx, Edifice)\r\n- 自作した宣言的UIラッパーフレームワークの紹介（9min）\r\n    - Why \"wrapper\"?\r\n    - Flexxとの類似点と差分\r\n    - `__new__()`メソッドによる魔法\r\n- まとめ（1min）","duration_min":"30","slide_url":"https://speakerdeck.com/urushiyama/pythondetukuruxuan-yan-de-uiratupahuremuwaku-ji-cun-guihuremuwakufalsediao-cha-wotian-ete","recording_url":"https://youtu.be/Vzj5HXdKEoE","name":"Yuta Urushiyama","profile":"都内勤務のエンジニア1年生。macOSアプリを作ったり自作キーボードを作ったり、ものづくりが大好き。\r\nPythonでは[口パク動画を音声データとテキストから生成するアプリ](https://github.com/urushiyama/PronounceMovieMaker)を作ったり、その過程でPyPIに[Perlで書かれたライブラリを移植したり](https://pypi.org/project/PySegmentKit/)しています。\r\n\r\n本トークは完全に個人の趣味であり、所属組織とは全く関係ありません。\r\n\r\n**経歴**\r\n\r\n- 1997年02月 新潟県にインスタンスが生成される\r\n- 2021年03月 筑波大学大学院システム情報工学研究科コンピュータサイエンス専攻 博士前期課程（修士）を修了\r\n- 2021年04月 税務会計と農業のIT企業にエンジニアとして入社"},{"id":"270384","title":"Neural Prophet – A powerful AI framework for Time Series Models","room":"#pyconjp_5","day":"10/16","start_time":"14:50","no":"7","elevator_pitch":"In this talk we are going to cover the following points:\r\n\r\nQuick intro about Time Series\r\nWhat is Neural Prophet?\r\nDifference between Neural Prophet vs Prophet\r\nWhy we need Neural Prophet?\r\nHands on Case study (From analysis to generating forecast Models)\r\nFuture opportunities with NP\r\n\r\n","prerequisite_knowledge":"# Prerequisites \r\n* Curiosity to learn something new\r\n* Familiarity with Time Series\r\n* Basic understanding of Neural Networks\r\n","audience_takeaway":"By the end of the talk, I will make sure, one should be able to understand this powerful  time series framework, its usage, and benefits.","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"English","lang_of_slide":"English only","description":"# Abstract - Neural Prophet, a new framework that extends on the original prophet framework, addresses pain points such as scale, customization and extensibility.it incorporates traditional statistical and neural network models for time series modeling, used in forecasting and anomaly detection.\r\n\r\n# Description\r\nThe best thing is you can get started easily using Neural Prophet. Neural Prophet is a relatively new library that uses Facebooks Prophet time series forecasting package and a Pytorch AR-Net model to produce highly accurate time series forecasts quickly. This is heavily inspired by Prophet, which is the popular forecasting tool developed by Facebook.\r\nThis framework is a decomposable time series model with the components, trend, seasonality, auto-regression, special events, future regressors and lagged regressors.","duration_min":"30","slide_url":"","recording_url":"https://youtu.be/mzByrO6da3s","name":"Kalyan","profile":"A self-taught data scientist/analytics manager, speaker & community first-person, Kalyan has contributed to various tech communities. He enjoys being involved with these communities and helping them grow. Currently I am associated with the following groups below:\r\nHyderabad Python Users Group – Core Member/ Meetups Organizer\r\nPyConf Hyderabad – Organizing Committee Member\r\nPyCon India – Review Panel Work Group Lead\r\nHumans for AI – Program Manager for AI learning Community"},{"id":"269708","title":"Locust実践編: Pythonで書く負荷試験一問一答","room":"#pyconjp_1 (15th: onsite)","day":"10/16","start_time":"16:20","no":"8","elevator_pitch":"JX通信社は速報に特化したサービスを提供しています。大きなニュースが飛び込んできた時のトラフィックのスパイクを支えるための負荷試験が必須となります。\r\n\r\n本セッションでは、そんな速報サービスを運用していくなかで蓄えたLocustによる負荷試験の具体的なノウハウを、「こんなときはどうする？」の一問一答形式でデモとサンプルコードを中心にお話しします。","prerequisite_knowledge":"- 基本的なPythonの構文についての知識\r\n- Webアプリケーションの基本的な知識","audience_takeaway":"- Locustを使った実践的な負荷試験のノウハウ\r\n    - 色々な成功/失敗判定の方法\r\n    - コマンドラインを使った実行方法\r\n    - workerプロセスをクラスタで実行する方法","audience_python_level":"Intermediate","track":"Web programming","lang_of_talk":"Japanese","lang_of_slide":"Both","description":"昨年度、 https://pycon.jp/2020/en/timetable/?id=203941 でLocustの紹介をするセッションはありましたが、今回のセッションでは「Locustとは何か」の説明よりも、より多くの具体例を交えた内容でお話しします。\r\n\r\n- 自己紹介/導入\r\n    - 自己紹介 (1 mins)\r\n    - Locust自体の簡単な説明 (2 mins)\r\n- 「こんなときどうする？」\r\n    - テストデータの初期化の方法(5 mins)\r\n    - 細かなレスポンスのバリデーションの書き方 (5 mins)\r\n    - 自動実行にも便利なコマンドラインからの起動方法 (3 mins)\r\n    - クラスタ構成の組み方 (5mins)\r\n- 「こんな時どうする？」デモ (5 mins)\r\n- まとめ(3mins)\r\n","duration_min":"30","slide_url":"https://speakerdeck.com/tatchnicolas/pyconjp2021-locust","recording_url":"https://youtu.be/ioO4wzlSAkQ","name":"TatchNicolas","profile":"株式会社JX通信社でバックエンドとインフラまわりをやってます。\r\n\r\n普段はDjango/FastAPIによるバックエンドAPI開発、運用上の自動化などでPythonを使っています。"},{"id":"272959","title":"実装で知るasyncio -イベントループの正体とは-","room":"#pyconjp_2","day":"10/16","start_time":"16:20","no":"8","elevator_pitch":"asyncioは、効率的に並行処理を行うための標準ライブラリです。\r\nasyncioを使った処理では、コルーチンやタスク、イベントループ、非同期I/Oなど多くの概念が登場します。\r\n本セッションでは、これらの主要な概念がasyncioパッケージ内でどのように実装されているかを見ていくことで、asyncioに関する理解を深めます。","prerequisite_knowledge":"Pythonの実装経験\r\n非同期処理や並列処理の経験","audience_takeaway":"asyncioの主要な構成要素とその概要\r\n標準ライブラリのコードを見る体験","audience_python_level":"Advanced","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"asyncioは、効率的に並行処理を行うための標準ライブラリです。\r\nasyncioを使った処理では、コルーチンやタスク、イベントループ、非同期I/Oなど多くの概念が登場します。\r\n本セッションでは、これらの主要な概念がasyncioパッケージ内でどのように実装されているかを見ていくことで、asyncioに関する理解を深めます。\r\n\r\nasyncioは、Django 3やSQLAlchemy 14をはじめとするフレームワークやライブラリのサポートが充実してきており、利用できるシーンが急速に広まっています。\r\nしかし、そのような状況とは裏腹にasyncioの学習コストは高く、デバッグも難しいものです。\r\nasyncioパッケージはファイル数が30近いパッケージであり全てを紹介することはできませんが、主要なクラスやメソッドを知ることでバグの混入を防いだり、素早い調査やデバッグにつながります。\r\n","duration_min":"30","slide_url":"https://docs.google.com/presentation/d/1qRmMGfTRvAfdJFCHpZhcTwsiJeu2yIO70CcnfPmZzfE/edit#slide=id.p","recording_url":"https://youtu.be/O0Uwz2l_A_Q","name":"REI SUYAMA","profile":"尾道が好きになり東京から尾道の向島に引っ越してきたフルリモートのプログラマ。学生時代からずっとPython好き。シンプルなコード、シンプルな設計を目指してます。"},{"id":"273434","title":"Python をフル活用した工場への AI 導入 & データ活用基盤構築事例","room":"#pyconjp_3","day":"10/16","start_time":"16:20","no":"8","elevator_pitch":"とある工業製品の製造工場での AI 導入の課題に対して、エッジ IoT からクラウドまで広範にわたる機械学習・データ分析基盤システムの構築を行い、その全ての過程で Python を利用しました。全く性質の異なるそれぞれの領域でどのように Python を活用し、ひとつの大きなシステムを構築してきたかという応用事例をご紹介します。","prerequisite_knowledge":"- Python に限らない何らかのプログラミング経験\r\n- ネットワーク, AWS, Docker のチュートリアルレベルの知識","audience_takeaway":"- エッジ環境で機械学習 (推論) とデータ収集システムを構築するノウハウ\r\n- TCP ベースの独自プロトコルを実装するノウハウ\r\n- AWS + Docker でセンサデータを扱うための ETL 基盤を構築するノウハウ\r\n- AWS + Docker で機械学習基盤を構築するノウハウ","audience_python_level":"Intermediate","track":"Machine learning","lang_of_talk":"Japanese","lang_of_slide":"Japanese only","description":"- 自己紹介 (1min)\r\n- 概要 (5min)\r\n    - プロジェクト概要\r\n    - システム全体像\r\n- エッジ IoT (10min)\r\n    - Docker Compose によるオーケストレーション\r\n    - Python による TCP ベース独自プロトコルの実装\r\n    - 機械学習 (推論) API の実装\r\n    - センサデータ収集と AWS への送信\r\n- クラウド / AWS (10min)\r\n    - システム全体のデプロイフローの構築\r\n    - AWS 上でのバッチ処理方式と採用しなかった方式の比較\r\n    - AWS 上での機械学習基盤構築\r\n- まとめ (1min)","duration_min":"30","slide_url":"https://speakerdeck.com/hoto17296/python-wohuruhuo-yong-sitagong-chang-hefalse-ai-dao-ru-and-tetahuo-yong-ji-pan-gou-zhu-shi-li","recording_url":"https://youtu.be/oSz2XdnI3lg","name":"hoto17296","profile":"ちゅらデータ株式会社 データアナリスト & VPoE\r\nJavaScript / Python / Docker / AWS あたりが得意\r\nネットワークいじりが趣味です"},{"id":"270532","title":"[辞退] Pythonに型アノテーションを自動で付与する","room":"#pyconjp_4","day":"10/16","start_time":"16:20","no":"8","elevator_pitch":"※スピーカーの申し出により登壇辞退となりました（スタッフ追記）\r\n\r\nPythonの生みの親であるグイド氏がdropbox社に在籍していた際に開発した、pyannotateを使用して、型がないコードに対して自動で型を付与し、静的型チェックが行えるまでにします。\r\n\r\n昨年はてなブックマークトレンドになった私自身の記事である「Pythonに型アノテーションを自動で付与する」が元となっており、このスピーチは更に「実際の活用事例・中身の実態・デメリットや課題」などを追加した内容になっています。\r\n\r\n実際に私がpdmというOSSで活用した例を用いて、ライブでコードを動かして型を適用し、mypyを走らせる所まで行います。","prerequisite_knowledge":"特になし。\r\nPythonの型アノテーションについてある程度知識があれば、実際に使用した事がなくても問題ありません。","audience_takeaway":"- Pyannotateの使用方法\r\n- Pyannotateを使用する際の注意方法","audience_python_level":"Intermediate","track":"Python core and around","lang_of_talk":"Japanese","lang_of_slide":"Both","description":"題記の通りです。Pythonの生みの親であるグイド氏がdropbox社に在籍していた際に開発した、pyannotateを使用して、型がないコードに対して自動で型を付与し、静的型チェックが行えるまでにします。\r\n\r\n私自身が書き、はてなブックマークトレンドにもなった下記記事が元になっております。下記記事では使い方のみしか記載しておりませんでしたが、今回はOSSでの活用、中身の実態、デメリットや将来像についても話したいと思います。\r\nhttps://twitter.com/suk1yak1/status/1382334315577499651?s=20\r\n\r\n【構成とタイムライン(20 ~ 30m)】\r\n- 導入 (3m)\r\n  - 自己紹介 (0.5m)\r\n  - タイムライン紹介 (0.5m)\r\n  - Pythonに型を付与したい動機 (1m)\r\n  - Pyannotateの簡単な紹介 (1m)\r\n- ユースケース: OSS活動での活用 pdmを紹介 (16m)\r\n  - 実際に自分が改善を行ったPRを参考に、どう動くかを0からライブで行います\r\n  - pytestを実行し、走査した関数全ての型情報をはじき出す (5m)\r\n  - 巨大な情報に対して、どの情報が必要かを抜き出す (2m)\r\n  - 複数以上の型を許容していた関数に対して、実際に行って確認してみる (3m)\r\n  - 走査した情報を元に、実際に自動で全てのコードに対して型を適用する (5m)\r\n  - mypyを用いて実際に検証してみる (1m)\r\n- (※時間があれば) 中身の実態 (5m)\r\n  - pyannotate_runtimeの中身の概要 (1m)\r\n  - init_types_collection　→　sys.setprofileで回収できる情報 (2m)\r\n  - sys.setprofileへ渡すhookの実態 (2m)\r\n- pyannotateの課題 (3m)\r\n  - あまりにも巨大な場合、f_back等の情報が不足している (2m)\r\n  - これは現在pyannotateに対してproposalを出しており、agreedされたらPRを出す予定 (1m)\r\n- まとめ (3m)\r\n  - Pythonはもともとは型を使わない言語\r\n  - その前提意識から、今更型をいれたいとなったときになかなか工数を出しづらい\r\n  - 今回のようにある程度機械的に自動化する仕組みを活用すれば、どのタイミングでも型を導入できるので便利","duration_min":"30","slide_url":"","recording_url":"","name":"ulwlu","profile":"ulwluという名前でOSS活動・記事執筆を行っています。これまでにいくつもの記事がQiitaやはてなブックマークやRedditの総合トレンド１位になりました。オンラインゲーム会社のバックエンドエンジニア、フリーランスのフルスタックエンジニア、2021年6月からは株式会社ユーザーベースのエンジニアとして働いています。"},{"id":"269676","title":"Event-Driven applications: Apache Kafka and Python","room":"#pyconjp_5","day":"10/16","start_time":"16:20","no":"8","elevator_pitch":"We live in a fast world where both humans and applications need to immediately react on events. If you want to build such applications let me introduce you to Apache Kafka, the best streaming platform, and show you how you can use it with Python and take full advantage of its capabilities.","prerequisite_knowledge":"This is a starter session on Apache Kafka and Python interaction, no prior knowledge required","audience_takeaway":"1) What Apache Kafka is\r\n2) How it works\r\n3) What problem it solves\r\n4) How to use Python and Kafka to create Event-driven Applications","audience_python_level":"Beginner","track":"Anything else basically which doesn’t fall into the types of topics above","lang_of_talk":"English","lang_of_slide":"English only","description":"Code and data go together like tomato and basil; not many applications work without moving data in some way. As our applications modernise and evolve to become more event-driven, the requirements for data are changing. In this session we will explore Apache Kafka, a data streaming platform, to enable reliable real-time data integration for your applications.\r\n\r\nWe will look at the types of problems that Kafka is best at solving, and show how to use it in your own applications. Whether you have a new application or are looking to upgrade an existing one, this session includes advice on adding Kafka using the Python libraries and includes code examples (with bonus discussion of pizza toppings) to use.\r\n\r\nWith Kafka in place, many things are possible so this session also introduces Kafka Connect, a selection of pre-built connectors that you can use to route events between systems and integrate with other tools. This session is recommended for engineers and architects whose applications are ready for next-level data abilities.","duration_min":"30","slide_url":"https://speakerdeck.com/ftisiot/event-driven-applications-apache-kafka-and-python","recording_url":"https://youtu.be/NQcvenW7lfk","name":"Francesco Tisiot","profile":"Francesco comes from Verona, Italy and works as a Developer Advocate at Aiven. With his many years of experience as a data engineer, he has stories to tell and advice for data-wranglers everywhere. Francesco loves sharing knowledge with others as a speaker and writer, and is on a mission to defend the world from bad Italian food!"},{"id":"291440","title":"Lightning talks","room":"#pyconjp","day":"10/16","start_time":"17:20","no":"9","elevator_pitch":"応募フォーム / Apply from https://forms.gle/oyJJj47p6yQA19T87","prerequisite_knowledge":"","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"","lang_of_slide":"","description":"Detail: https://pyconjp.blogspot.com/2021/10/lt-application-started.html\r\n\r\n## Archive\r\n\r\n- Developing browser-ready real-time computer vision apps with Streamlit by whitphx\r\n    - https://youtu.be/_LuLs8H1gJc\r\n    - https://github.com/whitphx/streamlit-webrtc\r\n","duration_min":"30","slide_url":"","recording_url":"","name":"PyCon JP 2021 Attendees (LT speakers)","profile":""},{"id":"290210","title":"Closing (Day 2)","room":"#pyconjp","day":"10/16","start_time":"17:50","no":"10","elevator_pitch":"Language of Talk: Both (Japanese $ English)","prerequisite_knowledge":"","audience_takeaway":"早期購入特典のピザは18:30~19:00に届きます / Early bird pizza will be delivered between 6:30 p.m. and 7:00. p.m (JST).","audience_python_level":"All","track":"","lang_of_talk":"","lang_of_slide":"English only","description":"一般社団法人PyCon JP Associationによる活動報告も含みます / Including PyCon JP Committee Report 2021 by PyCon JP Association","duration_min":"60","slide_url":"","recording_url":"","name":"PyCon JP 2021 Staff","profile":""},{"id":"291453","title":"Online party","room":"#pyconjp","day":"10/16","start_time":"18:50","no":"11","elevator_pitch":"飲み物・食べ物は各自ご用意をお願いします。チケット早期購入者はピザをお楽しみに！ / Prepare drinks & foods by yourself. Early bird ticket purchasers can look forward to pizza!","prerequisite_knowledge":"早期購入特典のピザは18:30~19:00に届きます / Early bird pizza will be delivered between 6:30 p.m. and 7:00. p.m (JST).","audience_takeaway":"","audience_python_level":"All","track":"","lang_of_talk":"","lang_of_slide":"","description":"","duration_min":"100","slide_url":"","recording_url":"","name":"All together","profile":""}],"dir":"/talk","path":"/talk/session","extension":".csv","createdAt":"2022-01-30T05:25:48.050Z","updatedAt":"2022-01-30T05:25:48.050Z","meta":{"version":0,"revision":0,"created":1643520387640},"$loki":2}],"idIndex":[1,2],"maxId":2,"_dirty":true,"_nestedProperties":[],"transactional":false,"asyncListeners":false,"disableMeta":false,"disableChangesApi":true,"disableDeltaChangesApi":true,"cloneObjects":false,"cloneMethod":"deep","changes":[],"_fullTextSearch":{"ii":{"title":{"_store":true,"_optimizeChanges":true,"docCount":1,"docStore":[[0,{"fieldLength":2}]],"totalFieldLength":2,"root":{"k":[103,115],"v":[{"k":[101],"v":[{"k":[116],"v":[{"k":[116],"v":[{"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[116],"v":[{"k":[97],"v":[{"k":[114],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[100],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}},"description":{"_store":true,"_optimizeChanges":true,"docCount":1,"docStore":[[0,{"fieldLength":32}]],"totalFieldLength":32,"root":{"k":[101,121,110,97,119,64,109,105,99,100,102,106,116,108,103,104],"v":[{"k":[109],"v":[{"k":[112],"v":[{"k":[111],"v":[{"k":[119],"v":[{"k":[101],"v":[{"k":[114],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[111,97],"v":[{"k":[117],"v":[{"k":[114],"v":[{"d":{"df":1,"dc":[[0,2]]}}]}]},{"k":[109],"v":[{"k":[108],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]},{"k":[117],"v":[{"k":[120],"v":[{"k":[116],"v":[{"k":[106],"v":[{"k":[115],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]},{"d":{"df":1,"dc":[[0,3]]},"k":[112,110,99,115],"v":[{"k":[112,105],"v":[{"k":[108],"v":[{"k":[105],"v":[{"k":[99],"v":[{"k":[97],"v":[{"k":[116],"v":[{"k":[105],"v":[{"k":[111],"v":[{"k":[110],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[44],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]},{"k":[100],"v":[{"d":{"df":1,"dc":[[0,2]]}}]},{"k":[116],"v":[{"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"d":{"df":1,"dc":[[0,1]]}}]},{"k":[105,114],"v":[{"k":[116],"v":[{"k":[104],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]},{"k":[105],"v":[{"k":[116],"v":[{"k":[101],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[110],"v":[{"k":[117],"v":[{"k":[120],"v":[{"k":[116],"v":[{"k":[47],"v":[{"k":[99],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]}]}]}]},{"k":[111,97],"v":[{"k":[100,110],"v":[{"k":[117],"v":[{"k":[108],"v":[{"k":[101],"v":[{"k":[58],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[103],"v":[{"k":[111],"v":[{"k":[100],"v":[{"k":[98],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]},{"k":[114],"v":[{"k":[107],"v":[{"k":[100],"v":[{"k":[111],"v":[{"k":[119],"v":[{"k":[110],"v":[{"k":[44],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[110],"v":[{"d":{"df":1,"dc":[[0,1]]}}]},{"k":[111,115,109],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[47],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[118],"v":[{"d":{"df":1,"dc":[[0,1]]}}]},{"k":[115],"v":[{"k":[46],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]},{"k":[105],"v":[{"k":[114],"v":[{"k":[101],"v":[{"k":[99],"v":[{"k":[116],"v":[{"k":[111],"v":[{"k":[114],"v":[{"k":[121],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[101,105],"v":[{"k":[116],"v":[{"k":[99],"v":[{"k":[104],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]},{"k":[108],"v":[{"k":[101],"v":[{"k":[115],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[115],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[44],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[104],"v":[{"k":[114],"v":[{"k":[111],"v":[{"k":[117],"v":[{"k":[103],"v":[{"k":[104],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[105],"v":[{"k":[107],"v":[{"k":[101],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]},{"k":[105],"v":[{"k":[116],"v":[{"k":[45],"v":[{"k":[98],"v":[{"k":[97],"v":[{"k":[115],"v":[{"k":[101],"v":[{"k":[100],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[101],"v":[{"k":[97],"v":[{"k":[100],"v":[{"k":[108],"v":[{"k":[101],"v":[{"k":[115],"v":[{"k":[115],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}},"slug":{"_store":true,"_optimizeChanges":true,"docCount":2,"docStore":[[0,{"fieldLength":1}],[1,{"fieldLength":1}]],"totalFieldLength":2,"root":{"k":[104,115],"v":[{"k":[101],"v":[{"k":[108],"v":[{"k":[108],"v":[{"k":[111],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[101],"v":[{"k":[115],"v":[{"k":[115],"v":[{"k":[105],"v":[{"k":[111],"v":[{"k":[110],"v":[{"d":{"df":1,"dc":[[1,1]]}}]}]}]}]}]}]}]}},"text":{"_store":true,"_optimizeChanges":true,"docCount":1,"docStore":[[0,{"fieldLength":79}]],"totalFieldLength":79,"root":{"k":[101,121,110,97,119,96,109,105,100,102,106,99,116,108,42,104,35,115],"v":[{"k":[109],"v":[{"k":[112],"v":[{"k":[111],"v":[{"k":[119],"v":[{"k":[101],"v":[{"k":[114],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[111,97],"v":[{"k":[117],"v":[{"k":[114],"v":[{"d":{"df":1,"dc":[[0,6]]}}]}]},{"k":[109],"v":[{"k":[108],"v":[{"d":{"df":1,"dc":[[0,1]]},"k":[44],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[117],"v":[{"k":[120],"v":[{"k":[116],"v":[{"k":[106],"v":[{"k":[115],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]},{"d":{"df":1,"dc":[[0,3]]},"k":[112,110,99,115],"v":[{"k":[112,105],"v":[{"k":[108],"v":[{"k":[105],"v":[{"k":[99],"v":[{"k":[97],"v":[{"k":[116],"v":[{"k":[105],"v":[{"k":[111],"v":[{"k":[110],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[44],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]},{"k":[100],"v":[{"d":{"df":1,"dc":[[0,3]]}}]},{"k":[116],"v":[{"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"d":{"df":1,"dc":[[0,1]]}}]},{"k":[105,114],"v":[{"k":[116],"v":[{"k":[104],"v":[{"d":{"df":1,"dc":[[0,3]]}}]}]},{"k":[105],"v":[{"k":[116],"v":[{"k":[101,105],"v":[{"d":{"df":1,"dc":[[0,2]]}},{"k":[110],"v":[{"k":[103],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[64,99,36,60],"v":[{"k":[110],"v":[{"k":[117],"v":[{"k":[120],"v":[{"k":[116],"v":[{"k":[106],"v":[{"k":[115],"v":[{"k":[47],"v":[{"k":[99],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[96],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"k":[111],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[47],"v":[{"k":[96],"v":[{"d":{"df":1,"dc":[[0,1]]},"k":[44],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]},{"k":[99],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[96],"v":[{"k":[58],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]},{"k":[110],"v":[{"k":[117],"v":[{"k":[120],"v":[{"k":[116],"v":[{"k":[45],"v":[{"k":[99],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[62],"v":[{"k":[96],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"k":[111,97],"v":[{"k":[100,110],"v":[{"k":[117],"v":[{"k":[108],"v":[{"k":[101],"v":[{"k":[58],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[103],"v":[{"k":[111],"v":[{"k":[100],"v":[{"k":[98],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]},{"k":[114],"v":[{"k":[107],"v":[{"k":[100],"v":[{"k":[111],"v":[{"k":[119],"v":[{"k":[110],"v":[{"d":{"df":1,"dc":[[0,1]]},"k":[44],"v":[{"d":{"df":1,"dc":[[0,2]]}}]}]}]}]}]}]}]}]},{"k":[110],"v":[{"d":{"df":1,"dc":[[0,2]]}}]},{"k":[105],"v":[{"k":[114,115],"v":[{"k":[101],"v":[{"k":[99],"v":[{"k":[116],"v":[{"k":[111,108],"v":[{"k":[114],"v":[{"k":[121],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]},{"k":[121],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]},{"k":[112],"v":[{"k":[108],"v":[{"k":[97],"v":[{"k":[121],"v":[{"d":{"df":1,"dc":[[0,1]]},"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]},{"k":[101,105],"v":[{"k":[116],"v":[{"k":[99],"v":[{"k":[104],"v":[{"d":{"df":1,"dc":[[0,2]]},"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[108],"v":[{"k":[101],"v":[{"k":[115],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[115],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[44,58],"v":[{"d":{"df":1,"dc":[[0,1]]}},{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[115,109,111],"v":[{"k":[118],"v":[{"d":{"df":1,"dc":[[0,2]]}}]},{"k":[115],"v":[{"k":[42],"v":[{"k":[42],"v":[{"k":[46],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"k":[110,109],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"d":{"df":1,"dc":[[0,5]]}}]}]}]}]},{"k":[112],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[104,111,101],"v":[{"k":[114,101],"v":[{"k":[111],"v":[{"k":[117],"v":[{"k":[103],"v":[{"k":[104],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]},{"d":{"df":1,"dc":[[0,1]]}}]},{"d":{"df":1,"dc":[[0,3]]}},{"k":[109],"v":[{"k":[112],"v":[{"k":[108],"v":[{"k":[97],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[58],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[105,101],"v":[{"k":[107],"v":[{"k":[101],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]},{"k":[97],"v":[{"k":[114],"v":[{"k":[110],"v":[{"d":{"df":1,"dc":[[0,3]]}}]}]}]}]},{"k":[42],"v":[{"k":[103],"v":[{"k":[105],"v":[{"k":[116],"v":[{"k":[45],"v":[{"k":[98],"v":[{"k":[97],"v":[{"k":[115],"v":[{"k":[101],"v":[{"k":[100],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]}]},{"k":[101,111,116],"v":[{"k":[97],"v":[{"k":[100],"v":[{"k":[108],"v":[{"k":[101],"v":[{"k":[115],"v":[{"k":[115],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]},{"k":[119],"v":[{"d":{"df":1,"dc":[[0,3]]}}]},{"k":[116],"v":[{"k":[112],"v":[{"k":[115],"v":[{"k":[58],"v":[{"k":[47],"v":[{"k":[47],"v":[{"k":[99],"v":[{"k":[111],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[101],"v":[{"k":[110],"v":[{"k":[116],"v":[{"k":[46],"v":[{"k":[110],"v":[{"k":[117],"v":[{"k":[120],"v":[{"k":[116],"v":[{"k":[106],"v":[{"k":[115],"v":[{"k":[46],"v":[{"k":[111],"v":[{"k":[114],"v":[{"k":[103],"v":[{"k":[47],"v":[{"k":[119,102,100],"v":[{"k":[114],"v":[{"k":[105],"v":[{"k":[116],"v":[{"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"k":[46],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]},{"k":[101],"v":[{"k":[116],"v":[{"k":[99],"v":[{"k":[104],"v":[{"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"k":[46],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]},{"k":[105],"v":[{"k":[115],"v":[{"k":[112],"v":[{"k":[108],"v":[{"k":[97],"v":[{"k":[121],"v":[{"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"k":[46],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"k":[35],"v":[{"d":{"df":1,"dc":[[0,3]]}}]},{"k":[117],"v":[{"k":[112],"v":[{"k":[112],"v":[{"k":[111],"v":[{"k":[114],"v":[{"k":[116],"v":[{"k":[105],"v":[{"k":[110],"v":[{"k":[103],"v":[{"d":{"df":1,"dc":[[0,1]]}}]}]}]}]}]}]}]}]}]}]}}}}}],"databaseVersion":1.5,"engineVersion":1.5,"filename":"content.db","_persistenceAdapter":null,"_persistenceMethod":null,"_throttledSaves":true}